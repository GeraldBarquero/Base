--------------------------------------------------------
-- Archivo creado  - sábado-julio-19-2014   
--------------------------------------------------------
DROP TABLE "COLABANCARIA"."TBBITACORATRANSACCION" cascade constraints;
DROP TABLE "COLABANCARIA"."TBCAJERO" cascade constraints;
DROP TABLE "COLABANCARIA"."TBCLIENTE" cascade constraints;
DROP TABLE "COLABANCARIA"."TBFILACLIENTE" cascade constraints;
DROP TABLE "COLABANCARIA"."TBTIPOCLIENTE" cascade constraints;
DROP TABLE "COLABANCARIA"."TBTIPOTRANSACCION" cascade constraints;
DROP TABLE "COLABANCARIA"."TBTRANSACCION" cascade constraints;
DROP TABLE "COLABANCARIA"."UT_LIB_DYN_QUERIES" cascade constraints;
DROP TABLE "COLABANCARIA"."UT_LIB_STARTUPS" cascade constraints;
DROP TABLE "COLABANCARIA"."UT_LIB_TEARDOWNS" cascade constraints;
DROP TABLE "COLABANCARIA"."UT_LIB_VALIDATIONS" cascade constraints;
DROP TABLE "COLABANCARIA"."UT_LOOKUP_CATEGORIES" cascade constraints;
DROP TABLE "COLABANCARIA"."UT_LOOKUP_DATATYPES" cascade constraints;
DROP TABLE "COLABANCARIA"."UT_LOOKUP_VALUES" cascade constraints;
DROP TABLE "COLABANCARIA"."UT_METADATA" cascade constraints;
DROP TABLE "COLABANCARIA"."UT_STARTUPS" cascade constraints;
DROP TABLE "COLABANCARIA"."UT_SUITE" cascade constraints;
DROP TABLE "COLABANCARIA"."UT_SUITE_ITEM_RESULTS" cascade constraints;
DROP TABLE "COLABANCARIA"."UT_SUITE_ITEMS" cascade constraints;
DROP TABLE "COLABANCARIA"."UT_SUITE_RESULTS" cascade constraints;
DROP TABLE "COLABANCARIA"."UT_TEARDOWNS" cascade constraints;
DROP TABLE "COLABANCARIA"."UT_TEST" cascade constraints;
DROP TABLE "COLABANCARIA"."UT_TEST_ARGUMENTS" cascade constraints;
DROP TABLE "COLABANCARIA"."UT_TEST_COVERAGE_STATS" cascade constraints;
DROP TABLE "COLABANCARIA"."UT_TEST_IMPL" cascade constraints;
DROP TABLE "COLABANCARIA"."UT_TEST_IMPL_ARG_RESULTS" cascade constraints;
DROP TABLE "COLABANCARIA"."UT_TEST_IMPL_ARGUMENTS" cascade constraints;
DROP TABLE "COLABANCARIA"."UT_TEST_IMPL_RESULTS" cascade constraints;
DROP TABLE "COLABANCARIA"."UT_TEST_IMPL_VAL_RESULTS" cascade constraints;
DROP TABLE "COLABANCARIA"."UT_TEST_RESULTS" cascade constraints;
DROP TABLE "COLABANCARIA"."UT_VALIDATIONS" cascade constraints;
DROP SEQUENCE "COLABANCARIA"."TBCAJERO_SEQUENCE";
DROP SEQUENCE "COLABANCARIA"."TBCLIENTE_SEQUENCE";
DROP SEQUENCE "COLABANCARIA"."TBFILACLIENTE_SEQUENCE";
DROP SEQUENCE "COLABANCARIA"."TBFILACLIENTE_SEQUENCE_FICHA";
DROP SEQUENCE "COLABANCARIA"."TBTIPO_CLIENTE_SEQUENCE";
DROP SEQUENCE "COLABANCARIA"."TBTRANSACCION_SEQUENCE";
DROP VIEW "COLABANCARIA"."ALL_UT_LIB_DYN_QUERIES";
DROP VIEW "COLABANCARIA"."ALL_UT_LIB_STARTUPS";
DROP VIEW "COLABANCARIA"."ALL_UT_LIB_TEARDOWNS";
DROP VIEW "COLABANCARIA"."ALL_UT_LIB_VALIDATIONS";
DROP VIEW "COLABANCARIA"."ALL_UT_LOOKUP_CATEGORIES";
DROP VIEW "COLABANCARIA"."ALL_UT_LOOKUP_DATATYPES";
DROP VIEW "COLABANCARIA"."ALL_UT_LOOKUP_VALUES";
DROP VIEW "COLABANCARIA"."ALL_UT_METADATA";
DROP VIEW "COLABANCARIA"."ALL_UT_STARTUPS";
DROP VIEW "COLABANCARIA"."ALL_UT_SUITE";
DROP VIEW "COLABANCARIA"."ALL_UT_SUITE_ITEM_RESULTS";
DROP VIEW "COLABANCARIA"."ALL_UT_SUITE_ITEMS";
DROP VIEW "COLABANCARIA"."ALL_UT_SUITE_RESULTS";
DROP VIEW "COLABANCARIA"."ALL_UT_TEARDOWNS";
DROP VIEW "COLABANCARIA"."ALL_UT_TEST";
DROP VIEW "COLABANCARIA"."ALL_UT_TEST_ARGUMENTS";
DROP VIEW "COLABANCARIA"."ALL_UT_TEST_COVERAGE_STATS";
DROP VIEW "COLABANCARIA"."ALL_UT_TEST_IMPL";
DROP VIEW "COLABANCARIA"."ALL_UT_TEST_IMPL_ARG_RESULTS";
DROP VIEW "COLABANCARIA"."ALL_UT_TEST_IMPL_ARGUMENTS";
DROP VIEW "COLABANCARIA"."ALL_UT_TEST_IMPL_RESULTS";
DROP VIEW "COLABANCARIA"."ALL_UT_TEST_IMPL_VAL_RESULTS";
DROP VIEW "COLABANCARIA"."ALL_UT_TEST_RESULTS";
DROP VIEW "COLABANCARIA"."ALL_UT_VALIDATIONS";
DROP VIEW "COLABANCARIA"."V_DATOSCLIENTE";
DROP FUNCTION "COLABANCARIA"."ATENDIENDO_CLIENTE";
DROP FUNCTION "COLABANCARIA"."VALIDAR_CLIENTE";
DROP PACKAGE "COLABANCARIA"."UT_UTIL";
DROP PACKAGE BODY "COLABANCARIA"."UT_UTIL";
DROP PROCEDURE "COLABANCARIA"."ALMUERZO_CAFE_OTROS";
DROP PROCEDURE "COLABANCARIA"."INSERT_TBCAJERO";
DROP PROCEDURE "COLABANCARIA"."INSERT_TBCLIENTE";
DROP PROCEDURE "COLABANCARIA"."INSERT_TBTIPOCLIENTE";
DROP PROCEDURE "COLABANCARIA"."INSERT_TBTRANSACCION";
DROP PROCEDURE "COLABANCARIA"."POSICIONCLIENTE";
DROP PROCEDURE "COLABANCARIA"."SIGUIENTE_FILA";
--------------------------------------------------------
--  DDL for Sequence TBCAJERO_SEQUENCE
--------------------------------------------------------

   CREATE SEQUENCE  "COLABANCARIA"."TBCAJERO_SEQUENCE"  MINVALUE 1 MAXVALUE 9999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence TBCLIENTE_SEQUENCE
--------------------------------------------------------

   CREATE SEQUENCE  "COLABANCARIA"."TBCLIENTE_SEQUENCE"  MINVALUE 1 MAXVALUE 9999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence TBFILACLIENTE_SEQUENCE
--------------------------------------------------------

   CREATE SEQUENCE  "COLABANCARIA"."TBFILACLIENTE_SEQUENCE"  MINVALUE 1 MAXVALUE 9999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence TBFILACLIENTE_SEQUENCE_FICHA
--------------------------------------------------------

   CREATE SEQUENCE  "COLABANCARIA"."TBFILACLIENTE_SEQUENCE_FICHA"  MINVALUE 1 MAXVALUE 3 INCREMENT BY 1 START WITH 4 CACHE 2 NOORDER  CYCLE ;
--------------------------------------------------------
--  DDL for Sequence TBTIPO_CLIENTE_SEQUENCE
--------------------------------------------------------

   CREATE SEQUENCE  "COLABANCARIA"."TBTIPO_CLIENTE_SEQUENCE"  MINVALUE 1 MAXVALUE 9999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence TBTRANSACCION_SEQUENCE
--------------------------------------------------------

   CREATE SEQUENCE  "COLABANCARIA"."TBTRANSACCION_SEQUENCE"  MINVALUE 1 MAXVALUE 9999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Table TBBITACORATRANSACCION
--------------------------------------------------------

  CREATE TABLE "COLABANCARIA"."TBBITACORATRANSACCION" 
   (	"ID_BITACORA_TRANSACCION" NUMBER, 
	"ID_TRANSACCION" NUMBER, 
	"ID_CLIENTE" NUMBER, 
	"ID_CAJERO" NUMBER, 
	"ID_TIPO_TRANSACCION" NUMBER, 
	"HORA_TRANSACCION" NVARCHAR2(50), 
	"ESTADO" NVARCHAR2(10)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TBCAJERO
--------------------------------------------------------

  CREATE TABLE "COLABANCARIA"."TBCAJERO" 
   (	"ID_CAJERO" NUMBER, 
	"CEDULA_CAJERO" NVARCHAR2(50), 
	"NOMBRE_CAJERO" NVARCHAR2(50), 
	"ESTADO_CAJERO" VARCHAR2(20 BYTE) DEFAULT 'DISPONIBLE'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TBCLIENTE
--------------------------------------------------------

  CREATE TABLE "COLABANCARIA"."TBCLIENTE" 
   (	"ID_CLIENTE" NUMBER, 
	"ID_TIPO_CLIENTE" NUMBER, 
	"CEDULA_CLIENTE" NVARCHAR2(50), 
	"NOMBRE_CLIENTE" NVARCHAR2(50), 
	"EDAD_CLIENTE" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TBFILACLIENTE
--------------------------------------------------------

  CREATE TABLE "COLABANCARIA"."TBFILACLIENTE" 
   (	"ID_FILA_CLIENTE" NUMBER, 
	"ID_CLIENTE" NUMBER, 
	"TIPO_CLIENTE" NCHAR(2), 
	"PRIORIDAD" NUMBER, 
	"NUMERO_FICHA" NUMBER, 
	"HORA_LLEGADA" NVARCHAR2(50), 
	"ESTADO" NVARCHAR2(10) DEFAULT 'ESPERANDO'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TBTIPOCLIENTE
--------------------------------------------------------

  CREATE TABLE "COLABANCARIA"."TBTIPOCLIENTE" 
   (	"ID_TIPO_CLIENTE" NUMBER, 
	"TIPO_CLIENTE" NCHAR(2), 
	"PRIORIDAD" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TBTIPOTRANSACCION
--------------------------------------------------------

  CREATE TABLE "COLABANCARIA"."TBTIPOTRANSACCION" 
   (	"ID_TIPO_TRANSACCION" NUMBER, 
	"TIPO_TRANSACCION" NVARCHAR2(30)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TBTRANSACCION
--------------------------------------------------------

  CREATE TABLE "COLABANCARIA"."TBTRANSACCION" 
   (	"ID_TRANSACCION" NUMBER, 
	"ID_CLIENTE" NUMBER, 
	"ID_CAJERO" NUMBER, 
	"ID_TIPO_TRANSACCION" NUMBER, 
	"HORA_TRANSACCION" NVARCHAR2(50)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table UT_LIB_DYN_QUERIES
--------------------------------------------------------

  CREATE TABLE "COLABANCARIA"."UT_LIB_DYN_QUERIES" 
   (	"LIB_DYN_QUERY_ID" VARCHAR2(40 BYTE), 
	"LIB_DYN_QUERY_NAME" VARCHAR2(120 BYTE), 
	"LIB_DYN_QUERY_CLASS" VARCHAR2(120 BYTE), 
	"LIB_DYN_QUERY" CLOB, 
	"CREATED_ON" TIMESTAMP (6), 
	"CREATED_BY" VARCHAR2(120 BYTE), 
	"UPDATED_ON" TIMESTAMP (6), 
	"UPDATED_BY" VARCHAR2(120 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" 
 LOB ("LIB_DYN_QUERY") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING ) ;
--------------------------------------------------------
--  DDL for Table UT_LIB_STARTUPS
--------------------------------------------------------

  CREATE TABLE "COLABANCARIA"."UT_LIB_STARTUPS" 
   (	"LIB_STARTUP_ID" VARCHAR2(40 BYTE), 
	"LIB_STARTUP_NAME" VARCHAR2(120 BYTE), 
	"LIB_STARTUP_CLASS" VARCHAR2(120 BYTE), 
	"LIB_STARTUP" CLOB, 
	"CREATED_ON" TIMESTAMP (6), 
	"CREATED_BY" VARCHAR2(120 BYTE), 
	"UPDATED_ON" TIMESTAMP (6), 
	"UPDATED_BY" VARCHAR2(120 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" 
 LOB ("LIB_STARTUP") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING ) ;
--------------------------------------------------------
--  DDL for Table UT_LIB_TEARDOWNS
--------------------------------------------------------

  CREATE TABLE "COLABANCARIA"."UT_LIB_TEARDOWNS" 
   (	"LIB_TEARDOWN_ID" VARCHAR2(40 BYTE), 
	"LIB_TEARDOWN_NAME" VARCHAR2(120 BYTE), 
	"LIB_TEARDOWN_CLASS" VARCHAR2(120 BYTE), 
	"LIB_TEARDOWN" CLOB, 
	"CREATED_ON" TIMESTAMP (6), 
	"CREATED_BY" VARCHAR2(120 BYTE), 
	"UPDATED_ON" TIMESTAMP (6), 
	"UPDATED_BY" VARCHAR2(120 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" 
 LOB ("LIB_TEARDOWN") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING ) ;
--------------------------------------------------------
--  DDL for Table UT_LIB_VALIDATIONS
--------------------------------------------------------

  CREATE TABLE "COLABANCARIA"."UT_LIB_VALIDATIONS" 
   (	"LIB_VALIDATION_ID" VARCHAR2(40 BYTE), 
	"LIB_VALIDATION_NAME" VARCHAR2(120 BYTE), 
	"LIB_VALIDATION_CLASS" VARCHAR2(120 BYTE), 
	"LIB_VALIDATION" CLOB, 
	"CREATED_ON" TIMESTAMP (6), 
	"CREATED_BY" VARCHAR2(120 BYTE), 
	"UPDATED_ON" TIMESTAMP (6), 
	"UPDATED_BY" VARCHAR2(120 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" 
 LOB ("LIB_VALIDATION") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING ) ;
--------------------------------------------------------
--  DDL for Table UT_LOOKUP_CATEGORIES
--------------------------------------------------------

  CREATE TABLE "COLABANCARIA"."UT_LOOKUP_CATEGORIES" 
   (	"ID" VARCHAR2(40 BYTE), 
	"NAME" VARCHAR2(120 BYTE), 
	"CREATED_ON" TIMESTAMP (6), 
	"CREATED_BY" VARCHAR2(120 BYTE), 
	"UPDATED_ON" TIMESTAMP (6), 
	"UPDATED_BY" VARCHAR2(120 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table UT_LOOKUP_DATATYPES
--------------------------------------------------------

  CREATE TABLE "COLABANCARIA"."UT_LOOKUP_DATATYPES" 
   (	"ID" VARCHAR2(40 BYTE), 
	"CAT_ID" VARCHAR2(40 BYTE), 
	"TYPE_ID" NUMBER, 
	"TYPE_STRING" VARCHAR2(120 BYTE), 
	"CREATED_ON" TIMESTAMP (6), 
	"CREATED_BY" VARCHAR2(120 BYTE), 
	"UPDATED_ON" TIMESTAMP (6), 
	"UPDATED_BY" VARCHAR2(120 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table UT_LOOKUP_VALUES
--------------------------------------------------------

  CREATE TABLE "COLABANCARIA"."UT_LOOKUP_VALUES" 
   (	"ID" VARCHAR2(40 BYTE), 
	"DATA_ID" VARCHAR2(40 BYTE), 
	"VALUE" CLOB, 
	"CREATED_ON" TIMESTAMP (6), 
	"CREATED_BY" VARCHAR2(120 BYTE), 
	"UPDATED_ON" TIMESTAMP (6), 
	"UPDATED_BY" VARCHAR2(120 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" 
 LOB ("VALUE") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING ) ;
--------------------------------------------------------
--  DDL for Table UT_METADATA
--------------------------------------------------------

  CREATE TABLE "COLABANCARIA"."UT_METADATA" 
   (	"NAME" VARCHAR2(120 BYTE), 
	"VALUE" VARCHAR2(2000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table UT_STARTUPS
--------------------------------------------------------

  CREATE TABLE "COLABANCARIA"."UT_STARTUPS" 
   (	"STARTUP_ID" VARCHAR2(40 BYTE), 
	"UT_ID" VARCHAR2(40 BYTE), 
	"UT_SID" VARCHAR2(40 BYTE), 
	"INDEX_NO" NUMBER(*,0), 
	"STARTUP" CLOB, 
	"LIB_STARTUP_ID" VARCHAR2(40 BYTE), 
	"CREATED_ON" TIMESTAMP (6), 
	"CREATED_BY" VARCHAR2(120 BYTE), 
	"UPDATED_ON" TIMESTAMP (6), 
	"UPDATED_BY" VARCHAR2(120 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" 
 LOB ("STARTUP") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING ) ;
--------------------------------------------------------
--  DDL for Table UT_SUITE
--------------------------------------------------------

  CREATE TABLE "COLABANCARIA"."UT_SUITE" 
   (	"UT_SID" VARCHAR2(40 BYTE), 
	"COVERAGE" NUMBER(1,0), 
	"NAME" VARCHAR2(120 BYTE), 
	"CREATED_ON" TIMESTAMP (6), 
	"CREATED_BY" VARCHAR2(120 BYTE), 
	"UPDATED_ON" TIMESTAMP (6), 
	"UPDATED_BY" VARCHAR2(120 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table UT_SUITE_ITEM_RESULTS
--------------------------------------------------------

  CREATE TABLE "COLABANCARIA"."UT_SUITE_ITEM_RESULTS" 
   (	"UTSR_ID" VARCHAR2(40 BYTE), 
	"UTR_ID" VARCHAR2(40 BYTE), 
	"UTR_NSID" VARCHAR2(40 BYTE), 
	"SEQUENCE" NUMBER, 
	"CREATED_ON" TIMESTAMP (6), 
	"CREATED_BY" VARCHAR2(120 BYTE), 
	"UPDATED_ON" TIMESTAMP (6), 
	"UPDATED_BY" VARCHAR2(120 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table UT_SUITE_ITEMS
--------------------------------------------------------

  CREATE TABLE "COLABANCARIA"."UT_SUITE_ITEMS" 
   (	"UT_SID" VARCHAR2(40 BYTE), 
	"UT_ID" VARCHAR2(40 BYTE), 
	"UT_NSID" VARCHAR2(40 BYTE), 
	"RUN_START" VARCHAR2(1 BYTE), 
	"RUN_TEAR" VARCHAR2(1 BYTE), 
	"SEQUENCE" NUMBER, 
	"CREATED_ON" TIMESTAMP (6), 
	"CREATED_BY" VARCHAR2(120 BYTE), 
	"UPDATED_ON" TIMESTAMP (6), 
	"UPDATED_BY" VARCHAR2(120 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table UT_SUITE_RESULTS
--------------------------------------------------------

  CREATE TABLE "COLABANCARIA"."UT_SUITE_RESULTS" 
   (	"UTSR_ID" VARCHAR2(40 BYTE), 
	"UT_SID" VARCHAR2(40 BYTE), 
	"NAME" VARCHAR2(120 BYTE), 
	"STATUS" VARCHAR2(20 BYTE), 
	"MESSAGE" VARCHAR2(2000 BYTE), 
	"STARTUP_STATUS" VARCHAR2(20 BYTE), 
	"STARTUP_MESSAGE" VARCHAR2(2000 BYTE), 
	"STARTUP_START_TIME" VARCHAR2(20 BYTE), 
	"STARTUP_END_TIME" VARCHAR2(20 BYTE), 
	"STARTUP_DURATION" NUMBER, 
	"TEARDOWN_STATUS" VARCHAR2(20 BYTE), 
	"TEARDOWN_MESSAGE" VARCHAR2(2000 BYTE), 
	"TEARDOWN_START_TIME" VARCHAR2(20 BYTE), 
	"TEARDOWN_END_TIME" VARCHAR2(20 BYTE), 
	"TEARDOWN_DURATION" NUMBER, 
	"COVERAGE" NUMBER(1,0), 
	"RUN_DATE" TIMESTAMP (6), 
	"CREATED_ON" TIMESTAMP (6), 
	"CREATED_BY" VARCHAR2(120 BYTE), 
	"UPDATED_ON" TIMESTAMP (6), 
	"UPDATED_BY" VARCHAR2(120 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table UT_TEARDOWNS
--------------------------------------------------------

  CREATE TABLE "COLABANCARIA"."UT_TEARDOWNS" 
   (	"TEARDOWN_ID" VARCHAR2(40 BYTE), 
	"UT_ID" VARCHAR2(40 BYTE), 
	"UT_SID" VARCHAR2(40 BYTE), 
	"INDEX_NO" NUMBER(*,0), 
	"TEARDOWN" CLOB, 
	"LIB_TEARDOWN_ID" VARCHAR2(40 BYTE), 
	"CREATED_ON" TIMESTAMP (6), 
	"CREATED_BY" VARCHAR2(120 BYTE), 
	"UPDATED_ON" TIMESTAMP (6), 
	"UPDATED_BY" VARCHAR2(120 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" 
 LOB ("TEARDOWN") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING ) ;
--------------------------------------------------------
--  DDL for Table UT_TEST
--------------------------------------------------------

  CREATE TABLE "COLABANCARIA"."UT_TEST" 
   (	"UT_ID" VARCHAR2(40 BYTE), 
	"NAME" VARCHAR2(120 BYTE), 
	"OBJECT_NAME" VARCHAR2(120 BYTE), 
	"OBJECT_TYPE" VARCHAR2(120 BYTE), 
	"OBJECT_OWNER" VARCHAR2(120 BYTE), 
	"OBJECT_CALL" VARCHAR2(120 BYTE), 
	"CONNECTION_NAME" VARCHAR2(120 BYTE), 
	"COVERAGE" NUMBER(1,0), 
	"CREATED_ON" TIMESTAMP (6), 
	"CREATED_BY" VARCHAR2(120 BYTE), 
	"UPDATED_ON" TIMESTAMP (6), 
	"UPDATED_BY" VARCHAR2(120 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table UT_TEST_ARGUMENTS
--------------------------------------------------------

  CREATE TABLE "COLABANCARIA"."UT_TEST_ARGUMENTS" 
   (	"ARG_ID" VARCHAR2(40 BYTE), 
	"UT_ID" VARCHAR2(40 BYTE), 
	"OWNER" VARCHAR2(30 BYTE), 
	"OBJECT_NAME" VARCHAR2(30 BYTE), 
	"PACKAGE_NAME" VARCHAR2(30 BYTE), 
	"OBJECT_ID" NUMBER, 
	"OVERLOAD" VARCHAR2(40 BYTE), 
	"ARGUMENT_NAME" VARCHAR2(30 BYTE), 
	"POSITION" NUMBER, 
	"SEQUENCE" NUMBER, 
	"DATA_LEVEL" NUMBER, 
	"DATA_TYPE" VARCHAR2(30 BYTE), 
	"DEFAULT_LENGTH" NUMBER, 
	"IN_OUT" VARCHAR2(9 BYTE), 
	"DATA_LENGTH" NUMBER, 
	"DATA_PRECISION" NUMBER, 
	"DATA_SCALE" NUMBER, 
	"RADIX" NUMBER, 
	"CHARACTER_SET_NAME" VARCHAR2(44 BYTE), 
	"TYPE_OWNER" VARCHAR2(30 BYTE), 
	"TYPE_NAME" VARCHAR2(30 BYTE), 
	"TYPE_SUBNAME" VARCHAR2(30 BYTE), 
	"TYPE_LINK" VARCHAR2(128 BYTE), 
	"PLS_TYPE" VARCHAR2(30 BYTE), 
	"CHAR_LENGTH" NUMBER, 
	"CHAR_USED" VARCHAR2(1 BYTE), 
	"CREATED_ON" TIMESTAMP (6), 
	"CREATED_BY" VARCHAR2(120 BYTE), 
	"UPDATED_ON" TIMESTAMP (6), 
	"UPDATED_BY" VARCHAR2(120 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table UT_TEST_COVERAGE_STATS
--------------------------------------------------------

  CREATE TABLE "COLABANCARIA"."UT_TEST_COVERAGE_STATS" 
   (	"UTC_ID" VARCHAR2(40 BYTE), 
	"UTIR_ID" VARCHAR2(40 BYTE), 
	"UTI_ID" VARCHAR2(40 BYTE), 
	"UNIT_OWNER" VARCHAR2(30 BYTE), 
	"UNIT_NAME" VARCHAR2(30 BYTE), 
	"LINE" NUMBER, 
	"TOTAL_OCCUR" NUMBER, 
	"TOTAL_TIME" NUMBER, 
	"TEXT" VARCHAR2(4000 BYTE), 
	"CREATED_ON" TIMESTAMP (6), 
	"CREATED_BY" VARCHAR2(120 BYTE), 
	"UPDATED_ON" TIMESTAMP (6), 
	"UPDATED_BY" VARCHAR2(120 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table UT_TEST_IMPL
--------------------------------------------------------

  CREATE TABLE "COLABANCARIA"."UT_TEST_IMPL" 
   (	"UTI_ID" VARCHAR2(40 BYTE), 
	"UT_ID" VARCHAR2(40 BYTE), 
	"NAME" VARCHAR2(120 BYTE), 
	"EXPECTED_RETURN" VARCHAR2(20 BYTE), 
	"EXPECTED_RETURN_ERROR" VARCHAR2(200 BYTE), 
	"DYNAMIC_VALUE_QUERY" CLOB, 
	"LIB_DYN_QUERY_ID" VARCHAR2(40 BYTE), 
	"CREATED_ON" TIMESTAMP (6), 
	"CREATED_BY" VARCHAR2(120 BYTE), 
	"UPDATED_ON" TIMESTAMP (6), 
	"UPDATED_BY" VARCHAR2(120 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" 
 LOB ("DYNAMIC_VALUE_QUERY") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING ) ;
--------------------------------------------------------
--  DDL for Table UT_TEST_IMPL_ARG_RESULTS
--------------------------------------------------------

  CREATE TABLE "COLABANCARIA"."UT_TEST_IMPL_ARG_RESULTS" 
   (	"UTIAR_ID" VARCHAR2(40 BYTE), 
	"UTIR_ID" VARCHAR2(40 BYTE), 
	"UTI_ID" VARCHAR2(40 BYTE), 
	"ARG_ID" VARCHAR2(40 BYTE), 
	"NAME" VARCHAR2(120 BYTE), 
	"STATUS" VARCHAR2(20 BYTE), 
	"MESSAGE" VARCHAR2(2000 BYTE), 
	"RUN_DATE" TIMESTAMP (6), 
	"CREATED_ON" TIMESTAMP (6), 
	"CREATED_BY" VARCHAR2(120 BYTE), 
	"UPDATED_ON" TIMESTAMP (6), 
	"UPDATED_BY" VARCHAR2(120 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table UT_TEST_IMPL_ARGUMENTS
--------------------------------------------------------

  CREATE TABLE "COLABANCARIA"."UT_TEST_IMPL_ARGUMENTS" 
   (	"UTI_ID" VARCHAR2(40 BYTE), 
	"ARG_ID" VARCHAR2(40 BYTE), 
	"INPUT_VALUE" CLOB, 
	"OUTPUT_VALUE" CLOB, 
	"TEST_OUTVAL" NUMBER(1,0) DEFAULT 1, 
	"CREATED_ON" TIMESTAMP (6), 
	"CREATED_BY" VARCHAR2(120 BYTE), 
	"UPDATED_ON" TIMESTAMP (6), 
	"UPDATED_BY" VARCHAR2(120 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" 
 LOB ("INPUT_VALUE") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING ) 
 LOB ("OUTPUT_VALUE") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING ) ;
--------------------------------------------------------
--  DDL for Table UT_TEST_IMPL_RESULTS
--------------------------------------------------------

  CREATE TABLE "COLABANCARIA"."UT_TEST_IMPL_RESULTS" 
   (	"UTIR_ID" VARCHAR2(40 BYTE), 
	"UTI_ID" VARCHAR2(40 BYTE), 
	"UTR_ID" VARCHAR2(40 BYTE), 
	"NAME" VARCHAR2(120 BYTE), 
	"STATUS" VARCHAR2(20 BYTE), 
	"MESSAGE" VARCHAR2(2000 BYTE), 
	"START_TIME" VARCHAR2(20 BYTE), 
	"END_TIME" VARCHAR2(20 BYTE), 
	"DURATION" NUMBER, 
	"STARTUP_STATUS" VARCHAR2(20 BYTE), 
	"STARTUP_MESSAGE" VARCHAR2(2000 BYTE), 
	"STARTUP_START_TIME" VARCHAR2(20 BYTE), 
	"STARTUP_END_TIME" VARCHAR2(20 BYTE), 
	"STARTUP_DURATION" NUMBER, 
	"OP_CALL_STATUS" VARCHAR2(20 BYTE), 
	"OP_CALL_MESSAGE" VARCHAR2(2000 BYTE), 
	"OP_CALL_START_TIME" VARCHAR2(20 BYTE), 
	"OP_CALL_END_TIME" VARCHAR2(20 BYTE), 
	"OP_CALL_DURATION" NUMBER, 
	"TEARDOWN_STATUS" VARCHAR2(20 BYTE), 
	"TEARDOWN_MESSAGE" VARCHAR2(2000 BYTE), 
	"TEARDOWN_START_TIME" VARCHAR2(20 BYTE), 
	"TEARDOWN_END_TIME" VARCHAR2(20 BYTE), 
	"TEARDOWN_DURATION" NUMBER, 
	"RUN_DATE" TIMESTAMP (6), 
	"CREATED_ON" TIMESTAMP (6), 
	"CREATED_BY" VARCHAR2(120 BYTE), 
	"UPDATED_ON" TIMESTAMP (6), 
	"UPDATED_BY" VARCHAR2(120 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table UT_TEST_IMPL_VAL_RESULTS
--------------------------------------------------------

  CREATE TABLE "COLABANCARIA"."UT_TEST_IMPL_VAL_RESULTS" 
   (	"UTIVR_ID" VARCHAR2(40 BYTE), 
	"UTIR_ID" VARCHAR2(40 BYTE), 
	"UTI_ID" VARCHAR2(40 BYTE), 
	"VAL_ID" VARCHAR2(40 BYTE), 
	"VAL_TYPE" VARCHAR2(40 BYTE), 
	"STATUS" VARCHAR2(20 BYTE), 
	"MESSAGE" VARCHAR2(2000 BYTE), 
	"VAL_START_TIME" VARCHAR2(20 BYTE), 
	"VAL_END_TIME" VARCHAR2(20 BYTE), 
	"VAL_DURATION" NUMBER, 
	"RUN_DATE" TIMESTAMP (6), 
	"CREATED_ON" TIMESTAMP (6), 
	"CREATED_BY" VARCHAR2(120 BYTE), 
	"UPDATED_ON" TIMESTAMP (6), 
	"UPDATED_BY" VARCHAR2(120 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table UT_TEST_RESULTS
--------------------------------------------------------

  CREATE TABLE "COLABANCARIA"."UT_TEST_RESULTS" 
   (	"UTR_ID" VARCHAR2(40 BYTE), 
	"UT_ID" VARCHAR2(40 BYTE), 
	"NAME" VARCHAR2(120 BYTE), 
	"STATUS" VARCHAR2(20 BYTE), 
	"MESSAGE" VARCHAR2(2000 BYTE), 
	"COVERAGE" NUMBER(1,0), 
	"TEST_USER_NAME" VARCHAR2(120 BYTE), 
	"CONNECTION_NAME" VARCHAR2(120 BYTE), 
	"RUN_DATE" TIMESTAMP (6), 
	"CREATED_ON" TIMESTAMP (6), 
	"CREATED_BY" VARCHAR2(120 BYTE), 
	"UPDATED_ON" TIMESTAMP (6), 
	"UPDATED_BY" VARCHAR2(120 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table UT_VALIDATIONS
--------------------------------------------------------

  CREATE TABLE "COLABANCARIA"."UT_VALIDATIONS" 
   (	"VALIDATION_ID" VARCHAR2(40 BYTE), 
	"UTI_ID" VARCHAR2(40 BYTE), 
	"INDEX_NO" NUMBER(*,0), 
	"VALIDATION" CLOB, 
	"LIB_VALIDATION_ID" VARCHAR2(40 BYTE), 
	"APPLY_VALIDATION" NUMBER(1,0) DEFAULT 1, 
	"CREATED_ON" TIMESTAMP (6), 
	"CREATED_BY" VARCHAR2(120 BYTE), 
	"UPDATED_ON" TIMESTAMP (6), 
	"UPDATED_BY" VARCHAR2(120 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" 
 LOB ("VALIDATION") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING ) ;
--------------------------------------------------------
--  DDL for View ALL_UT_LIB_DYN_QUERIES
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COLABANCARIA"."ALL_UT_LIB_DYN_QUERIES" ("LIB_DYN_QUERY_ID", "LIB_DYN_QUERY_NAME", "LIB_DYN_QUERY", "CREATED_ON", "CREATED_BY") AS 
  SELECT
    "LIB_DYN_QUERY_ID" AS "LIB_DYN_QUERY_ID"
   ,"LIB_DYN_QUERY_NAME" AS "LIB_DYN_QUERY_NAME"
   ,"LIB_DYN_QUERY" AS "LIB_DYN_QUERY"
   ,"CREATED_ON" AS "CREATED_ON"
   ,"CREATED_BY" AS "CREATED_BY"
  FROM
    "UT_LIB_DYN_QUERIES"
  WITH READ ONLY;
 

   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_LIB_DYN_QUERIES"."LIB_DYN_QUERY_ID" IS 'Library Dynamic Value Query Code Hook identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_LIB_DYN_QUERIES"."LIB_DYN_QUERY_NAME" IS 'Code Hook name';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_LIB_DYN_QUERIES"."LIB_DYN_QUERY" IS 'Code Hook property XML';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_LIB_DYN_QUERIES"."CREATED_ON" IS 'Creation timestamp';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_LIB_DYN_QUERIES"."CREATED_BY" IS 'Created by user';
 
   COMMENT ON TABLE "COLABANCARIA"."ALL_UT_LIB_DYN_QUERIES"  IS 'Unit Test - Dynamic Value Query Code Hook Library';
--------------------------------------------------------
--  DDL for View ALL_UT_LIB_STARTUPS
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COLABANCARIA"."ALL_UT_LIB_STARTUPS" ("LIB_STARTUP_ID", "LIB_STARTUP_NAME", "LIB_STARTUP_CLASS", "LIB_STARTUP", "CREATED_ON", "CREATED_BY") AS 
  SELECT
    "LIB_STARTUP_ID" AS "LIB_STARTUP_ID"
   ,"LIB_STARTUP_NAME" AS "LIB_STARTUP_NAME"
   ,"LIB_STARTUP_CLASS" AS "LIB_STARTUP_CLASS"
   ,"LIB_STARTUP" AS "LIB_STARTUP"
   ,"CREATED_ON" AS "CREATED_ON"
   ,"CREATED_BY" AS "CREATED_BY"
  FROM
    "UT_LIB_STARTUPS"
  WITH READ ONLY;
 

   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_LIB_STARTUPS"."LIB_STARTUP_ID" IS 'Library Startup Code Hook identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_LIB_STARTUPS"."LIB_STARTUP_NAME" IS 'Code Hook name';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_LIB_STARTUPS"."LIB_STARTUP_CLASS" IS 'Implementing Java class name';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_LIB_STARTUPS"."LIB_STARTUP" IS 'Code Hook property XML';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_LIB_STARTUPS"."CREATED_ON" IS 'Creation timestamp';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_LIB_STARTUPS"."CREATED_BY" IS 'Created by user';
 
   COMMENT ON TABLE "COLABANCARIA"."ALL_UT_LIB_STARTUPS"  IS 'Unit Test - Startup Code Hook Library';
--------------------------------------------------------
--  DDL for View ALL_UT_LIB_TEARDOWNS
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COLABANCARIA"."ALL_UT_LIB_TEARDOWNS" ("LIB_TEARDOWN_ID", "LIB_TEARDOWN_NAME", "LIB_TEARDOWN_CLASS", "LIB_TEARDOWN", "CREATED_ON", "CREATED_BY") AS 
  SELECT
    "LIB_TEARDOWN_ID" AS "LIB_TEARDOWN_ID"
   ,"LIB_TEARDOWN_NAME" AS "LIB_TEARDOWN_NAME"
   ,"LIB_TEARDOWN_CLASS" AS "LIB_TEARDOWN_CLASS"
   ,"LIB_TEARDOWN" AS "LIB_TEARDOWN"
   ,"CREATED_ON" AS "CREATED_ON"
   ,"CREATED_BY" AS "CREATED_BY"
  FROM
    "UT_LIB_TEARDOWNS"
  WITH READ ONLY;
 

   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_LIB_TEARDOWNS"."LIB_TEARDOWN_ID" IS 'Library Teardown Code Hook identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_LIB_TEARDOWNS"."LIB_TEARDOWN_NAME" IS 'Code Hook name';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_LIB_TEARDOWNS"."LIB_TEARDOWN_CLASS" IS 'Implementing Java class name';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_LIB_TEARDOWNS"."LIB_TEARDOWN" IS 'Code Hook property XML';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_LIB_TEARDOWNS"."CREATED_ON" IS 'Creation timestamp';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_LIB_TEARDOWNS"."CREATED_BY" IS 'Created by user';
 
   COMMENT ON TABLE "COLABANCARIA"."ALL_UT_LIB_TEARDOWNS"  IS 'Unit Test - Teardown Code Hook Library';
--------------------------------------------------------
--  DDL for View ALL_UT_LIB_VALIDATIONS
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COLABANCARIA"."ALL_UT_LIB_VALIDATIONS" ("LIB_VALIDATION_ID", "LIB_VALIDATION_NAME", "LIB_VALIDATION_CLASS", "LIB_VALIDATION", "CREATED_ON", "CREATED_BY") AS 
  SELECT
    "LIB_VALIDATION_ID" AS "LIB_VALIDATION_ID"
   ,"LIB_VALIDATION_NAME" AS "LIB_VALIDATION_NAME"
   ,"LIB_VALIDATION_CLASS" AS "LIB_VALIDATION_CLASS"
   ,"LIB_VALIDATION" AS "LIB_VALIDATION"
   ,"CREATED_ON" AS "CREATED_ON"
   ,"CREATED_BY" AS "CREATED_BY"
  FROM
    "UT_LIB_VALIDATIONS"
  WITH READ ONLY;
 

   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_LIB_VALIDATIONS"."LIB_VALIDATION_ID" IS 'Library Validation Code Hook identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_LIB_VALIDATIONS"."LIB_VALIDATION_NAME" IS 'Code Hook name';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_LIB_VALIDATIONS"."LIB_VALIDATION_CLASS" IS 'Implementing Java class name';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_LIB_VALIDATIONS"."LIB_VALIDATION" IS 'Code Hook property XML';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_LIB_VALIDATIONS"."CREATED_ON" IS 'Creation timestamp';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_LIB_VALIDATIONS"."CREATED_BY" IS 'Created by user';
 
   COMMENT ON TABLE "COLABANCARIA"."ALL_UT_LIB_VALIDATIONS"  IS 'Unit Test - Validation Code Hook Library';
--------------------------------------------------------
--  DDL for View ALL_UT_LOOKUP_CATEGORIES
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COLABANCARIA"."ALL_UT_LOOKUP_CATEGORIES" ("ID", "NAME") AS 
  SELECT
    "ID" AS "ID"
   ,"NAME" AS "NAME"
  FROM
    "UT_LOOKUP_CATEGORIES"
  WITH READ ONLY;
 

   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_LOOKUP_CATEGORIES"."ID" IS 'Lookup Category identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_LOOKUP_CATEGORIES"."NAME" IS 'Category name';
 
   COMMENT ON TABLE "COLABANCARIA"."ALL_UT_LOOKUP_CATEGORIES"  IS 'Unit Test - Lookup Categories';
--------------------------------------------------------
--  DDL for View ALL_UT_LOOKUP_DATATYPES
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COLABANCARIA"."ALL_UT_LOOKUP_DATATYPES" ("ID", "CAT_ID", "TYPE_ID", "TYPE_STRING") AS 
  SELECT
    "ID" AS "ID"
   ,"CAT_ID" AS "CAT_ID"
   ,"TYPE_ID" AS "TYPE_ID"
   ,"TYPE_STRING" AS "TYPE_STRING"
  FROM
    "UT_LOOKUP_DATATYPES"
  WITH READ ONLY;
 

   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_LOOKUP_DATATYPES"."ID" IS 'Lookup Datatype identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_LOOKUP_DATATYPES"."CAT_ID" IS 'Lookup Category identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_LOOKUP_DATATYPES"."TYPE_ID" IS 'Datatype SQL type code';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_LOOKUP_DATATYPES"."TYPE_STRING" IS 'Datatype type name';
 
   COMMENT ON TABLE "COLABANCARIA"."ALL_UT_LOOKUP_DATATYPES"  IS 'Unit Test - Lookup Datatypes';
--------------------------------------------------------
--  DDL for View ALL_UT_LOOKUP_VALUES
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COLABANCARIA"."ALL_UT_LOOKUP_VALUES" ("ID", "DATA_ID", "VALUE") AS 
  SELECT
    "ID" AS "ID"
   ,"DATA_ID" AS "DATA_ID"
   ,"VALUE" AS "VALUE"
  FROM
    "UT_LOOKUP_VALUES"
  WITH READ ONLY;
 

   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_LOOKUP_VALUES"."ID" IS 'Lookup Value identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_LOOKUP_VALUES"."DATA_ID" IS 'Datatype identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_LOOKUP_VALUES"."VALUE" IS 'Value property XML';
 
   COMMENT ON TABLE "COLABANCARIA"."ALL_UT_LOOKUP_VALUES"  IS 'Unit Test - Lookup Value';
--------------------------------------------------------
--  DDL for View ALL_UT_METADATA
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COLABANCARIA"."ALL_UT_METADATA" ("NAME", "VALUE") AS 
  SELECT
    "NAME" AS "NAME"
   ,"VALUE" AS "VALUE"
  FROM
    "UT_METADATA"
  WITH READ ONLY;
 

   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_METADATA"."NAME" IS 'Metadata name';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_METADATA"."VALUE" IS 'Metadata value';
 
   COMMENT ON TABLE "COLABANCARIA"."ALL_UT_METADATA"  IS 'Unit Test - Metadata';
--------------------------------------------------------
--  DDL for View ALL_UT_STARTUPS
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COLABANCARIA"."ALL_UT_STARTUPS" ("STARTUP_ID", "UT_ID", "UT_SID", "INDEX_NO", "STARTUP", "LIB_STARTUP_ID", "CREATED_ON", "CREATED_BY") AS 
  SELECT "STARTUP_ID",
    "UT_ID",
    "UT_SID",
    "INDEX_NO",
    "STARTUP",
    "LIB_STARTUP_ID",
    "CREATED_ON",
    "CREATED_BY"
  FROM ut_startups;
 

   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_STARTUPS"."STARTUP_ID" IS 'Startup Code Hook usage identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_STARTUPS"."UT_ID" IS 'Suite identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_STARTUPS"."INDEX_NO" IS 'Index within list of startups of Test';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_STARTUPS"."STARTUP" IS 'Code Hook property XML';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_STARTUPS"."LIB_STARTUP_ID" IS 'Library Startup Code Hook identifier when referencing library object';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_STARTUPS"."CREATED_ON" IS 'Creation timestamp';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_STARTUPS"."CREATED_BY" IS 'Created by user';
 
   COMMENT ON TABLE "COLABANCARIA"."ALL_UT_STARTUPS"  IS 'Unit Test - Startup Code Hooks';
--------------------------------------------------------
--  DDL for View ALL_UT_SUITE
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COLABANCARIA"."ALL_UT_SUITE" ("UT_SID", "COVERAGE", "NAME", "CREATED_ON", "CREATED_BY") AS 
  SELECT
    "UT_SID" AS "UT_SID"
   ,DECODE("COVERAGE", 0, 'N', 'Y') AS "COVERAGE"
   ,"NAME" AS "NAME"
   ,"CREATED_ON" AS "CREATED_ON"
   ,"CREATED_BY" AS "CREATED_BY"
  FROM
    "UT_SUITE"
  WITH READ ONLY;
 

   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_SUITE"."UT_SID" IS 'Suite identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_SUITE"."COVERAGE" IS 'Collect coverage statistics - Y or N';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_SUITE"."NAME" IS 'Suite name';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_SUITE"."CREATED_ON" IS 'Creation timestamp';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_SUITE"."CREATED_BY" IS 'Created by user';
 
   COMMENT ON TABLE "COLABANCARIA"."ALL_UT_SUITE"  IS 'Unit Test - Suite';
--------------------------------------------------------
--  DDL for View ALL_UT_SUITE_ITEM_RESULTS
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COLABANCARIA"."ALL_UT_SUITE_ITEM_RESULTS" ("UTSR_ID", "UTR_ID", "UTR_NSID") AS 
  SELECT
    "UTSR_ID" AS "UTSR_ID"
   ,"UTR_ID" AS "UTR_ID"
   ,"UTR_NSID" AS "UTR_NSID"
  FROM
    "UT_SUITE_ITEM_RESULTS"
  WITH READ ONLY;
 

   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_SUITE_ITEM_RESULTS"."UTSR_ID" IS 'Suite Result identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_SUITE_ITEM_RESULTS"."UTR_ID" IS 'Test Result identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_SUITE_ITEM_RESULTS"."UTR_NSID" IS 'Nested Suite Result identifier';
 
   COMMENT ON TABLE "COLABANCARIA"."ALL_UT_SUITE_ITEM_RESULTS"  IS 'Unit Test - Item Results within a Suite';
--------------------------------------------------------
--  DDL for View ALL_UT_SUITE_ITEMS
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COLABANCARIA"."ALL_UT_SUITE_ITEMS" ("UT_SID", "UT_ID", "UT_NSID", "RUN_START", "RUN_TEAR", "SEQUENCE", "CREATED_ON", "CREATED_BY") AS 
  SELECT
    "UT_SID" AS "UT_SID"
   ,"UT_ID" AS "UT_ID"
   ,"UT_NSID" AS "UT_NSID"
   ,"RUN_START" AS "RUN_START"
   ,"RUN_TEAR" AS "RUN_TEAR"
   ,"SEQUENCE" AS "SEQUENCE"
   ,"CREATED_ON" AS "CREATED_ON"
   ,"CREATED_BY" AS "CREATED_BY"
  FROM
    "UT_SUITE_ITEMS"
  WITH READ ONLY;
 

   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_SUITE_ITEMS"."UT_SID" IS 'Suite identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_SUITE_ITEMS"."UT_ID" IS 'Test identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_SUITE_ITEMS"."UT_NSID" IS 'Nested Suite identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_SUITE_ITEMS"."RUN_START" IS 'Execute Startup Code Hook - Y or N';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_SUITE_ITEMS"."RUN_TEAR" IS 'Execute Teardown Code Hook - Y or N';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_SUITE_ITEMS"."SEQUENCE" IS 'Index within test list of Suite';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_SUITE_ITEMS"."CREATED_ON" IS 'Creation timestamp';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_SUITE_ITEMS"."CREATED_BY" IS 'Created by user';
 
   COMMENT ON TABLE "COLABANCARIA"."ALL_UT_SUITE_ITEMS"  IS 'Unit Test - Suite Items';
--------------------------------------------------------
--  DDL for View ALL_UT_SUITE_RESULTS
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COLABANCARIA"."ALL_UT_SUITE_RESULTS" ("UTSR_ID", "UT_SID", "NAME", "STATUS", "MESSAGE", "STARTUP_STATUS", "STARTUP_MESSAGE", "STARTUP_START_TIME", "STARTUP_END_TIME", "STARTUP_DURATION", "TEARDOWN_STATUS", "TEARDOWN_MESSAGE", "TEARDOWN_START_TIME", "TEARDOWN_END_TIME", "TEARDOWN_DURATION", "RUN_DATE") AS 
  SELECT
    "UTSR_ID" AS "UTSR_ID"
   ,"UT_SID" AS "UT_SID"
   ,"NAME" AS "NAME"
   ,"STATUS" AS "STATUS"
   ,"MESSAGE" AS "MESSAGE"
   ,"STARTUP_STATUS" AS "STARTUP_STATUS"
   ,"STARTUP_MESSAGE" AS "STARTUP_MESSAGE"
   ,"STARTUP_START_TIME" AS "STARTUP_START_TIME"
   ,"STARTUP_END_TIME" AS "STARTUP_END_TIME"
   ,"STARTUP_DURATION" AS "STARTUP_DURATION"
   ,"TEARDOWN_STATUS" AS "TEARDOWN_STATUS"
   ,"TEARDOWN_MESSAGE" AS "TEARDOWN_MESSAGE"
   ,"TEARDOWN_START_TIME" AS "TEARDOWN_START_TIME"
   ,"TEARDOWN_END_TIME" AS "TEARDOWN_END_TIME"
   ,"TEARDOWN_DURATION" AS "TEARDOWN_DURATION"
   ,"RUN_DATE" AS "RUN_DATE"
  FROM
    "UT_SUITE_RESULTS"
  WITH READ ONLY;
 

   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_SUITE_RESULTS"."UTSR_ID" IS 'Suite Result identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_SUITE_RESULTS"."UT_SID" IS 'Suite identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_SUITE_RESULTS"."NAME" IS 'Result name';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_SUITE_RESULTS"."STATUS" IS 'Result status';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_SUITE_RESULTS"."MESSAGE" IS 'Result message, if any';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_SUITE_RESULTS"."STARTUP_STATUS" IS 'Startup status';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_SUITE_RESULTS"."STARTUP_MESSAGE" IS 'Startup message, if any';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_SUITE_RESULTS"."STARTUP_START_TIME" IS 'Start time of suite startup in formated text';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_SUITE_RESULTS"."STARTUP_END_TIME" IS 'End time of suite startup in formated text';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_SUITE_RESULTS"."STARTUP_DURATION" IS 'Duration of suite startup in milliseconds';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_SUITE_RESULTS"."TEARDOWN_STATUS" IS 'Teardown status';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_SUITE_RESULTS"."TEARDOWN_MESSAGE" IS 'Teardown message, if any';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_SUITE_RESULTS"."TEARDOWN_START_TIME" IS 'Start time of suite teardown in formated text';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_SUITE_RESULTS"."TEARDOWN_END_TIME" IS 'End time of suite teardown in formated text';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_SUITE_RESULTS"."TEARDOWN_DURATION" IS 'Duration of suite teardown in milliseconds';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_SUITE_RESULTS"."RUN_DATE" IS 'Suite run timestamp';
 
   COMMENT ON TABLE "COLABANCARIA"."ALL_UT_SUITE_RESULTS"  IS 'Unit Test - Suite Results';
--------------------------------------------------------
--  DDL for View ALL_UT_TEARDOWNS
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COLABANCARIA"."ALL_UT_TEARDOWNS" ("TEARDOWN_ID", "UT_ID", "UT_SID", "INDEX_NO", "TEARDOWN", "LIB_TEARDOWN_ID", "CREATED_ON", "CREATED_BY") AS 
  SELECT "TEARDOWN_ID",
    "UT_ID",
    "UT_SID",
    "INDEX_NO",
    "TEARDOWN",
    "LIB_TEARDOWN_ID",
    "CREATED_ON",
    "CREATED_BY"
  FROM UT_TEARDOWNS;
 

   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEARDOWNS"."TEARDOWN_ID" IS 'Teardown Code Hook usage identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEARDOWNS"."UT_ID" IS 'Suite identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEARDOWNS"."INDEX_NO" IS 'Index within list of teardowns of Test';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEARDOWNS"."TEARDOWN" IS 'Code Hook property XML';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEARDOWNS"."LIB_TEARDOWN_ID" IS 'Library Teardown Code Hook identifier when referencing library object';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEARDOWNS"."CREATED_ON" IS 'Creation timestamp';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEARDOWNS"."CREATED_BY" IS 'Created by user';
 
   COMMENT ON TABLE "COLABANCARIA"."ALL_UT_TEARDOWNS"  IS 'Unit Test - Teardown Code Hooks';
--------------------------------------------------------
--  DDL for View ALL_UT_TEST
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COLABANCARIA"."ALL_UT_TEST" ("UT_ID", "NAME", "OBJECT_NAME", "OBJECT_TYPE", "OBJECT_OWNER", "OBJECT_CALL", "CONNECTION_NAME", "COVERAGE", "CREATED_ON", "CREATED_BY") AS 
  SELECT
    "UT_ID" AS "UT_ID"
   ,"NAME" AS "NAME"
   ,"OBJECT_NAME" AS "OBJECT_NAME"
   ,"OBJECT_TYPE" AS "OBJECT_TYPE"
   ,"OBJECT_OWNER" AS "OBJECT_OWNER"
   ,"OBJECT_CALL" AS "OBJECT_CALL"
   ,"CONNECTION_NAME" AS "CONNECTION_NAME"
   ,DECODE("COVERAGE", 0, 'N', 'Y') AS "COVERAGE"
   ,"CREATED_ON" AS "CREATED_ON"
   ,"CREATED_BY" AS "CREATED_BY"
  FROM
    "UT_TEST"
  WITH READ ONLY;
 

   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST"."UT_ID" IS 'Test identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST"."NAME" IS 'Test name';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST"."OBJECT_NAME" IS 'Database object name';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST"."OBJECT_TYPE" IS 'Database object type';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST"."OBJECT_OWNER" IS 'Database object owner';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST"."OBJECT_CALL" IS 'Database object callable interface';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST"."CONNECTION_NAME" IS 'Name of connection used to import test';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST"."COVERAGE" IS 'Collect coverage statistics - Y or N';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST"."CREATED_ON" IS 'Creation timestamp';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST"."CREATED_BY" IS 'Created by user';
 
   COMMENT ON TABLE "COLABANCARIA"."ALL_UT_TEST"  IS 'Unit Test - Tests';
--------------------------------------------------------
--  DDL for View ALL_UT_TEST_ARGUMENTS
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COLABANCARIA"."ALL_UT_TEST_ARGUMENTS" ("ARG_ID", "UT_ID", "OWNER", "OBJECT_NAME", "PACKAGE_NAME", "OBJECT_ID", "OVERLOAD", "ARGUMENT_NAME", "POSITION", "SEQUENCE", "DATA_LEVEL", "DATA_TYPE", "DEFAULT_LENGTH", "IN_OUT", "DATA_LENGTH", "DATA_PRECISION", "DATA_SCALE", "RADIX", "CHARACTER_SET_NAME", "TYPE_OWNER", "TYPE_NAME", "TYPE_SUBNAME", "TYPE_LINK", "PLS_TYPE", "CHAR_LENGTH", "CHAR_USED") AS 
  SELECT
    "ARG_ID" AS "ARG_ID"
   ,"UT_ID" AS "UT_ID"
   ,"OWNER" AS "OWNER"
   ,"OBJECT_NAME" AS "OBJECT_NAME"
   ,"PACKAGE_NAME" AS "PACKAGE_NAME"
   ,"OBJECT_ID" AS "OBJECT_ID"
   ,"OVERLOAD" AS "OVERLOAD"
   ,"ARGUMENT_NAME" AS "ARGUMENT_NAME"
   ,"POSITION" AS "POSITION"
   ,"SEQUENCE" AS "SEQUENCE"
   ,"DATA_LEVEL" AS "DATA_LEVEL"
   ,"DATA_TYPE" AS "DATA_TYPE"
   ,"DEFAULT_LENGTH" AS "DEFAULT_LENGTH"
   ,"IN_OUT" AS "IN_OUT"
   ,"DATA_LENGTH" AS "DATA_LENGTH"
   ,"DATA_PRECISION" AS "DATA_PRECISION"
   ,"DATA_SCALE" AS "DATA_SCALE"
   ,"RADIX" AS "RADIX"
   ,"CHARACTER_SET_NAME" AS "CHARACTER_SET_NAME"
   ,"TYPE_OWNER" AS "TYPE_OWNER"
   ,"TYPE_NAME" AS "TYPE_NAME"
   ,"TYPE_SUBNAME" AS "TYPE_SUBNAME"
   ,"TYPE_LINK" AS "TYPE_LINK"
   ,"PLS_TYPE" AS "PLS_TYPE"
   ,"CHAR_LENGTH" AS "CHAR_LENGTH"
   ,"CHAR_USED" AS "CHAR_USED"
  FROM
    "UT_TEST_ARGUMENTS"
  WITH READ ONLY;
 

   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_ARGUMENTS"."ARG_ID" IS 'Test Argument identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_ARGUMENTS"."UT_ID" IS 'Test identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_ARGUMENTS"."OWNER" IS 'Username of the owner of the object';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_ARGUMENTS"."OBJECT_NAME" IS 'Procedure or function name';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_ARGUMENTS"."PACKAGE_NAME" IS 'Package name';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_ARGUMENTS"."OBJECT_ID" IS 'Object number of the object';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_ARGUMENTS"."OVERLOAD" IS 'Overload unique identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_ARGUMENTS"."ARGUMENT_NAME" IS 'Argument name';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_ARGUMENTS"."POSITION" IS 'Position in argument list, or null for function return value';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_ARGUMENTS"."SEQUENCE" IS 'Argument sequence, including all nesting levels';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_ARGUMENTS"."DATA_LEVEL" IS 'Nesting depth of argument for composite types';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_ARGUMENTS"."DATA_TYPE" IS 'Datatype of the argument';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_ARGUMENTS"."DEFAULT_LENGTH" IS 'Length of default value for the argument';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_ARGUMENTS"."IN_OUT" IS 'Argument direction (IN, OUT, or IN/OUT)';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_ARGUMENTS"."DATA_LENGTH" IS 'Length of default value for the argument';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_ARGUMENTS"."DATA_PRECISION" IS 'Length: decimal digits (NUMBER) or binary digits (FLOAT)';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_ARGUMENTS"."DATA_SCALE" IS 'Digits to right of decimal point in a number';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_ARGUMENTS"."RADIX" IS 'Argument radix for a number';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_ARGUMENTS"."CHARACTER_SET_NAME" IS 'Character set name for the argument';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_ARGUMENTS"."TYPE_OWNER" IS 'Owner name for the argument type in case of object types';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_ARGUMENTS"."TYPE_NAME" IS 'Object name for the argument type in case of object types';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_ARGUMENTS"."TYPE_SUBNAME" IS 'Subordinate object name for the argument type in case of object types';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_ARGUMENTS"."TYPE_LINK" IS 'Database link name for the argument type in case of object types';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_ARGUMENTS"."PLS_TYPE" IS 'PL/SQL type name for numeric arguments';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_ARGUMENTS"."CHAR_LENGTH" IS 'Character limit for string datatypes';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_ARGUMENTS"."CHAR_USED" IS 'Is the byte limit (B) or char limit (C) official for this string?';
 
   COMMENT ON TABLE "COLABANCARIA"."ALL_UT_TEST_ARGUMENTS"  IS 'Unit Test - Test Arguments imported from ALL_ARGUMENTS view';
--------------------------------------------------------
--  DDL for View ALL_UT_TEST_COVERAGE_STATS
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COLABANCARIA"."ALL_UT_TEST_COVERAGE_STATS" ("UTC_ID", "UTIR_ID", "UTI_ID", "UNIT_OWNER", "UNIT_NAME", "LINE", "TOTAL_OCCUR", "TOTAL_TIME", "TEXT") AS 
  SELECT
    "UTC_ID" AS "UTC_ID"
   ,"UTIR_ID" AS "UTIR_ID"
   ,"UTI_ID" AS "UTI_ID"
   ,"UNIT_OWNER" AS "UNIT_OWNER"
   ,"UNIT_NAME" AS "UNIT_NAME"
   ,"LINE" AS "LINE"
   ,"TOTAL_OCCUR" AS "TOTAL_OCCUR"
   ,"TOTAL_TIME" AS "TOTAL_TIME"
   ,"TEXT" AS "TEXT"
  FROM
    "UT_TEST_COVERAGE_STATS"
  WITH READ ONLY;
 

   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_COVERAGE_STATS"."UTC_ID" IS 'Coverage Statistics identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_COVERAGE_STATS"."UTIR_ID" IS 'Test Implementation Results identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_COVERAGE_STATS"."UTI_ID" IS 'Test Implementation identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_COVERAGE_STATS"."UNIT_OWNER" IS 'Owner of callable database object';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_COVERAGE_STATS"."UNIT_NAME" IS 'Name of callable database object';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_COVERAGE_STATS"."LINE" IS 'Line number of executed code';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_COVERAGE_STATS"."TOTAL_OCCUR" IS 'Number of time line of code executed';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_COVERAGE_STATS"."TOTAL_TIME" IS 'Accumulated time elasped time line of code executed in milliseconds';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_COVERAGE_STATS"."TEXT" IS 'Text of executed line';
 
   COMMENT ON TABLE "COLABANCARIA"."ALL_UT_TEST_COVERAGE_STATS"  IS 'Unit Test - Coverage Statistics';
--------------------------------------------------------
--  DDL for View ALL_UT_TEST_IMPL
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COLABANCARIA"."ALL_UT_TEST_IMPL" ("UTI_ID", "UT_ID", "NAME", "EXPECTED_RETURN", "EXPECTED_RETURN_ERROR", "DYNAMIC_VALUE_QUERY", "LIB_DYN_QUERY_ID", "CREATED_ON", "CREATED_BY") AS 
  SELECT
    "UTI_ID" AS "UTI_ID"
   ,"UT_ID" AS "UT_ID"
   ,"NAME" AS "NAME"
   ,"EXPECTED_RETURN" AS "EXPECTED_RETURN"
   ,"EXPECTED_RETURN_ERROR" AS "EXPECTED_RETURN_ERROR"
   ,"DYNAMIC_VALUE_QUERY" AS "DYNAMIC_VALUE_QUERY"
   ,"LIB_DYN_QUERY_ID" AS "LIB_DYN_QUERY_ID"
   ,"CREATED_ON" AS "CREATED_ON"
   ,"CREATED_BY" AS "CREATED_BY"
  FROM
    "UT_TEST_IMPL"
  WITH READ ONLY;
 

   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL"."UTI_ID" IS 'Test Implementation identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL"."UT_ID" IS 'Test identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL"."NAME" IS 'Implementation name';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL"."EXPECTED_RETURN" IS 'Expected returned status';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL"."EXPECTED_RETURN_ERROR" IS 'Expected returned error message ';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL"."DYNAMIC_VALUE_QUERY" IS 'Dynamic query used to populate test argument values';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL"."CREATED_ON" IS 'Creation timestamp';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL"."CREATED_BY" IS 'Created by user';
 
   COMMENT ON TABLE "COLABANCARIA"."ALL_UT_TEST_IMPL"  IS 'Unit Test - Test Implementations';
--------------------------------------------------------
--  DDL for View ALL_UT_TEST_IMPL_ARG_RESULTS
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COLABANCARIA"."ALL_UT_TEST_IMPL_ARG_RESULTS" ("UTIAR_ID", "UTIR_ID", "UTI_ID", "ARG_ID", "NAME", "STATUS", "MESSAGE", "RUN_DATE") AS 
  SELECT
    "UTIAR_ID" AS "UTIAR_ID"
   ,"UTIR_ID" AS "UTIR_ID"
   ,"UTI_ID" AS "UTI_ID"
   ,"ARG_ID" AS "ARG_ID"
   ,"NAME" AS "NAME"
   ,"STATUS" AS "STATUS"
   ,"MESSAGE" AS "MESSAGE"
   ,"RUN_DATE" AS "RUN_DATE"
  FROM
    "UT_TEST_IMPL_ARG_RESULTS"
  WITH READ ONLY;
 

   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_ARG_RESULTS"."UTIAR_ID" IS 'Test Implementation Argument Result identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_ARG_RESULTS"."UTIR_ID" IS 'Test Implementation Result identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_ARG_RESULTS"."UTI_ID" IS 'Test Implementation identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_ARG_RESULTS"."ARG_ID" IS 'Test Argument identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_ARG_RESULTS"."NAME" IS 'Result name';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_ARG_RESULTS"."STATUS" IS 'Result status';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_ARG_RESULTS"."MESSAGE" IS 'Result message, if any';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_ARG_RESULTS"."RUN_DATE" IS 'Test run timestamp';
 
   COMMENT ON TABLE "COLABANCARIA"."ALL_UT_TEST_IMPL_ARG_RESULTS"  IS 'Unit Test - Test Implementation Argument Results';
--------------------------------------------------------
--  DDL for View ALL_UT_TEST_IMPL_ARGUMENTS
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COLABANCARIA"."ALL_UT_TEST_IMPL_ARGUMENTS" ("UTI_ID", "ARG_ID", "INPUT_VALUE", "OUTPUT_VALUE", "TEST_OUTVAL") AS 
  SELECT
    "UTI_ID" AS "UTI_ID"
   ,"ARG_ID" AS "ARG_ID"
   ,"INPUT_VALUE" AS "INPUT_VALUE"
   ,"OUTPUT_VALUE" AS "OUTPUT_VALUE"
   ,DECODE("TEST_OUTVAL", 0, 'N', 'Y') AS "TEST_OUTVAL"
  FROM
    "UT_TEST_IMPL_ARGUMENTS"
  WITH READ ONLY;
 

   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_ARGUMENTS"."UTI_ID" IS 'Test identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_ARGUMENTS"."ARG_ID" IS 'Test Argument identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_ARGUMENTS"."INPUT_VALUE" IS 'Input parameter value property XML';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_ARGUMENTS"."OUTPUT_VALUE" IS 'Expected output parameter value property XML';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_ARGUMENTS"."TEST_OUTVAL" IS 'Test output value - Y or N';
 
   COMMENT ON TABLE "COLABANCARIA"."ALL_UT_TEST_IMPL_ARGUMENTS"  IS 'Unit Test - Test Implementation Arguments';
--------------------------------------------------------
--  DDL for View ALL_UT_TEST_IMPL_RESULTS
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COLABANCARIA"."ALL_UT_TEST_IMPL_RESULTS" ("UTIR_ID", "UTI_ID", "UTR_ID", "NAME", "STATUS", "MESSAGE", "START_TIME", "END_TIME", "DURATION", "STARTUP_STATUS", "STARTUP_MESSAGE", "STARTUP_START_TIME", "STARTUP_END_TIME", "STARTUP_DURATION", "OP_CALL_STATUS", "OP_CALL_MESSAGE", "OP_CALL_START_TIME", "OP_CALL_END_TIME", "OP_CALL_DURATION", "TEARDOWN_STATUS", "TEARDOWN_MESSAGE", "TEARDOWN_START_TIME", "TEARDOWN_END_TIME", "TEARDOWN_DURATION", "RUN_DATE") AS 
  SELECT
    "UTIR_ID" AS "UTIR_ID"
   ,"UTI_ID" AS "UTI_ID"
   ,"UTR_ID" AS "UTR_ID"
   ,"NAME" AS "NAME"
   ,"STATUS" AS "STATUS"
   ,"MESSAGE" AS "MESSAGE"
   ,"START_TIME" AS "START_TIME"
   ,"END_TIME" AS "END_TIME"
   ,"DURATION" AS "DURATION"
   ,"STARTUP_STATUS" AS "STARTUP_STATUS"
   ,"STARTUP_MESSAGE" AS "STARTUP_MESSAGE"
   ,"STARTUP_START_TIME" AS "STARTUP_START_TIME"
   ,"STARTUP_END_TIME" AS "STARTUP_END_TIME"
   ,"STARTUP_DURATION" AS "STARTUP_DURATION"
   ,"OP_CALL_STATUS" AS "OP_CALL_STATUS"
   ,"OP_CALL_MESSAGE" AS "OP_CALL_MESSAGE"
   ,"OP_CALL_START_TIME" AS "OP_CALL_START_TIME"
   ,"OP_CALL_END_TIME" AS "OP_CALL_END_TIME"
   ,"OP_CALL_DURATION" AS "OP_CALL_DURATION"
   ,"TEARDOWN_STATUS" AS "TEARDOWN_STATUS"
   ,"TEARDOWN_MESSAGE" AS "TEARDOWN_MESSAGE"
   ,"TEARDOWN_START_TIME" AS "TEARDOWN_START_TIME"
   ,"TEARDOWN_END_TIME" AS "TEARDOWN_END_TIME"
   ,"TEARDOWN_DURATION" AS "TEARDOWN_DURATION"
   ,"RUN_DATE" AS "RUN_DATE"
  FROM
    "UT_TEST_IMPL_RESULTS"
  WITH READ ONLY;
 

   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_RESULTS"."UTIR_ID" IS 'Test Implementation Result identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_RESULTS"."UTI_ID" IS 'Test Implementation identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_RESULTS"."UTR_ID" IS 'Test Result identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_RESULTS"."NAME" IS 'Result name';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_RESULTS"."STATUS" IS 'Result status';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_RESULTS"."MESSAGE" IS 'Result message, if any';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_RESULTS"."START_TIME" IS 'Start time of test run in formated text';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_RESULTS"."END_TIME" IS 'End time of test run in formated text';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_RESULTS"."DURATION" IS 'Duration of test run in milliseconds';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_RESULTS"."STARTUP_STATUS" IS 'Startup status';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_RESULTS"."STARTUP_MESSAGE" IS 'Startup message, if any';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_RESULTS"."STARTUP_START_TIME" IS 'Start time of test run startup in formated text';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_RESULTS"."STARTUP_END_TIME" IS 'End time of test run startup in formated text';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_RESULTS"."STARTUP_DURATION" IS 'Duration of test run startup in milliseconds';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_RESULTS"."OP_CALL_STATUS" IS 'Operation call status';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_RESULTS"."OP_CALL_MESSAGE" IS 'Operation call message, if any';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_RESULTS"."OP_CALL_START_TIME" IS 'Start time of test run operation call in formated text';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_RESULTS"."OP_CALL_END_TIME" IS 'End time of test run operation call in formated text';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_RESULTS"."OP_CALL_DURATION" IS 'Duration of test run operation call in milliseconds';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_RESULTS"."TEARDOWN_STATUS" IS 'Teardown status';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_RESULTS"."TEARDOWN_MESSAGE" IS 'Teardown message, if any';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_RESULTS"."TEARDOWN_START_TIME" IS 'Start time of test run teardown in formated text';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_RESULTS"."TEARDOWN_END_TIME" IS 'End time of test run teardown in formated text';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_RESULTS"."TEARDOWN_DURATION" IS 'Duration of test run teardown in milliseconds';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_RESULTS"."RUN_DATE" IS 'Test run timestamp';
 
   COMMENT ON TABLE "COLABANCARIA"."ALL_UT_TEST_IMPL_RESULTS"  IS 'Unit Test - Test Implementation Results';
--------------------------------------------------------
--  DDL for View ALL_UT_TEST_IMPL_VAL_RESULTS
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COLABANCARIA"."ALL_UT_TEST_IMPL_VAL_RESULTS" ("UTIVR_ID", "UTIR_ID", "UTI_ID", "VAL_ID", "VAL_TYPE", "STATUS", "MESSAGE", "VAL_START_TIME", "VAL_END_TIME", "VAL_DURATION", "RUN_DATE") AS 
  SELECT
    "UTIVR_ID" AS "UTIVR_ID"
   ,"UTIR_ID" AS "UTIR_ID"
   ,"UTI_ID" AS "UTI_ID"
   ,"VAL_ID" AS "VAL_ID"
   ,"VAL_TYPE" AS "VAL_TYPE"
   ,"STATUS" AS "STATUS"
   ,"MESSAGE" AS "MESSAGE"
   ,"VAL_START_TIME" AS "VAL_START_TIME"
   ,"VAL_END_TIME" AS "VAL_END_TIME"
   ,"VAL_DURATION" AS "VAL_DURATION"
   ,"RUN_DATE" AS "RUN_DATE"
  FROM
    "UT_TEST_IMPL_VAL_RESULTS"
  WITH READ ONLY;
 

   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_VAL_RESULTS"."UTIVR_ID" IS 'Test Implementation Validation Result identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_VAL_RESULTS"."UTIR_ID" IS 'Test Implementation Result identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_VAL_RESULTS"."UTI_ID" IS 'Test Implementation identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_VAL_RESULTS"."VAL_ID" IS 'Validation identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_VAL_RESULTS"."VAL_TYPE" IS 'Validation type';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_VAL_RESULTS"."STATUS" IS 'Validation status';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_VAL_RESULTS"."MESSAGE" IS 'Validation message, if any';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_VAL_RESULTS"."VAL_START_TIME" IS 'Start time of test run validation in formated text';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_VAL_RESULTS"."VAL_END_TIME" IS 'End time of test run validation in formated text';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_VAL_RESULTS"."VAL_DURATION" IS 'Duration of test run validation in milliseconds';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_IMPL_VAL_RESULTS"."RUN_DATE" IS 'Test run timestamp';
 
   COMMENT ON TABLE "COLABANCARIA"."ALL_UT_TEST_IMPL_VAL_RESULTS"  IS 'Unit Test - Test Implementation Validation Results';
--------------------------------------------------------
--  DDL for View ALL_UT_TEST_RESULTS
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COLABANCARIA"."ALL_UT_TEST_RESULTS" ("UTR_ID", "UT_ID", "NAME", "STATUS", "MESSAGE", "RUN_DATE") AS 
  SELECT
    "UTR_ID" AS "UTR_ID"
   ,"UT_ID" AS "UT_ID"
   ,"NAME" AS "NAME"
   ,"STATUS" AS "STATUS"
   ,"MESSAGE" AS "MESSAGE"
   ,"RUN_DATE" AS "RUN_DATE"
  FROM
    "UT_TEST_RESULTS"
  WITH READ ONLY;
 

   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_RESULTS"."UTR_ID" IS 'Test Result identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_RESULTS"."UT_ID" IS 'Test identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_RESULTS"."NAME" IS 'Result name';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_RESULTS"."STATUS" IS 'Result status';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_RESULTS"."MESSAGE" IS 'Result message, if any';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_TEST_RESULTS"."RUN_DATE" IS 'Test run timestamp';
 
   COMMENT ON TABLE "COLABANCARIA"."ALL_UT_TEST_RESULTS"  IS 'Unit Test - Test Results';
--------------------------------------------------------
--  DDL for View ALL_UT_VALIDATIONS
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COLABANCARIA"."ALL_UT_VALIDATIONS" ("VALIDATION_ID", "UTI_ID", "INDEX_NO", "VALIDATION", "LIB_VALIDATION_ID", "CREATED_ON", "CREATED_BY", "APPLY_VALIDATION") AS 
  SELECT
    "VALIDATION_ID" AS "VALIDATION_ID"
   ,"UTI_ID" AS "UTI_ID"
   ,"INDEX_NO" AS "INDEX_NO"
   ,"VALIDATION" AS "VALIDATION"
   ,"LIB_VALIDATION_ID" AS "LIB_VALIDATION_ID"
   ,"CREATED_ON" AS "CREATED_ON"
   ,"CREATED_BY" AS "CREATED_BY"
   ,DECODE("APPLY_VALIDATION", 0, 'N', 'Y') AS "APPLY_VALIDATION"
  FROM
    "UT_VALIDATIONS"
  WITH READ ONLY;
 

   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_VALIDATIONS"."VALIDATION_ID" IS 'Validation Code Hook usage identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_VALIDATIONS"."UTI_ID" IS 'Test Implementation identifier';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_VALIDATIONS"."INDEX_NO" IS 'Index within list of validations of Test Implementation';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_VALIDATIONS"."VALIDATION" IS 'Code Hook property XML';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_VALIDATIONS"."LIB_VALIDATION_ID" IS 'Library Validation Code Hook identifier when referencing library object';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_VALIDATIONS"."CREATED_ON" IS 'Creation timestamp';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_VALIDATIONS"."CREATED_BY" IS 'Created by user';
 
   COMMENT ON COLUMN "COLABANCARIA"."ALL_UT_VALIDATIONS"."APPLY_VALIDATION" IS 'Apply validation during test run - Y or N';
 
   COMMENT ON TABLE "COLABANCARIA"."ALL_UT_VALIDATIONS"  IS 'Unit Test - Validation Code Hooks';
--------------------------------------------------------
--  DDL for View V_DATOSCLIENTE
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "COLABANCARIA"."V_DATOSCLIENTE" ("ID_CLIENTE", "TIPO_CLIENTE", "CEDULA_CLIENTE", "NOMBRE_CLIENTE") AS 
  SELECT a.ID_CLIENTE,b.TIPO_CLIENTE, a.CEDULA_CLIENTE, a.NOMBRE_CLIENTE    
FROM TBCLIENTE a, TBTIPOCLIENTE b
WHERE a.ID_TIPO_CLIENTE = b.ID_TIPO_CLIENTE ;
REM INSERTING into COLABANCARIA.TBBITACORATRANSACCION
SET DEFINE OFF;
REM INSERTING into COLABANCARIA.TBCAJERO
SET DEFINE OFF;
Insert into COLABANCARIA.TBCAJERO (ID_CAJERO,CEDULA_CAJERO,NOMBRE_CAJERO,ESTADO_CAJERO) values ('21','5-898-965','Marco Rojas Rojas','DISPONIBLE');
Insert into COLABANCARIA.TBCAJERO (ID_CAJERO,CEDULA_CAJERO,NOMBRE_CAJERO,ESTADO_CAJERO) values ('22','7-156-753','Mairena Alvarado Fonseca','DISPONIBLE');
Insert into COLABANCARIA.TBCAJERO (ID_CAJERO,CEDULA_CAJERO,NOMBRE_CAJERO,ESTADO_CAJERO) values ('23','4-566-506','Flor Sandi Rivas','DISPONIBLE');
Insert into COLABANCARIA.TBCAJERO (ID_CAJERO,CEDULA_CAJERO,NOMBRE_CAJERO,ESTADO_CAJERO) values ('24','1-1996-999','Adrian Borjes Angulo','DISPONIBLE');
REM INSERTING into COLABANCARIA.TBCLIENTE
SET DEFINE OFF;
Insert into COLABANCARIA.TBCLIENTE (ID_CLIENTE,ID_TIPO_CLIENTE,CEDULA_CLIENTE,NOMBRE_CLIENTE,EDAD_CLIENTE) values ('3','1','1-1444-0739','Gerald Barquero Valverde','23');
Insert into COLABANCARIA.TBCLIENTE (ID_CLIENTE,ID_TIPO_CLIENTE,CEDULA_CLIENTE,NOMBRE_CLIENTE,EDAD_CLIENTE) values ('5','2','3-404-325','Roberto Valverde Mora','23');
Insert into COLABANCARIA.TBCLIENTE (ID_CLIENTE,ID_TIPO_CLIENTE,CEDULA_CLIENTE,NOMBRE_CLIENTE,EDAD_CLIENTE) values ('7','3','2-568-199','Marco Zamora Fallas','23');
Insert into COLABANCARIA.TBCLIENTE (ID_CLIENTE,ID_TIPO_CLIENTE,CEDULA_CLIENTE,NOMBRE_CLIENTE,EDAD_CLIENTE) values ('22','1','9-111-111','Eduardo Reyes Molina','23');
REM INSERTING into COLABANCARIA.TBFILACLIENTE
SET DEFINE OFF;
Insert into COLABANCARIA.TBFILACLIENTE (ID_FILA_CLIENTE,ID_CLIENTE,TIPO_CLIENTE,PRIORIDAD,NUMERO_FICHA,HORA_LLEGADA,ESTADO) values ('45','3','DI','1','2','10:22:30','ATENDIENDO');
Insert into COLABANCARIA.TBFILACLIENTE (ID_FILA_CLIENTE,ID_CLIENTE,TIPO_CLIENTE,PRIORIDAD,NUMERO_FICHA,HORA_LLEGADA,ESTADO) values ('46','5','AM','2','3','10:22:56','ATENDIENDO');
Insert into COLABANCARIA.TBFILACLIENTE (ID_FILA_CLIENTE,ID_CLIENTE,TIPO_CLIENTE,PRIORIDAD,NUMERO_FICHA,HORA_LLEGADA,ESTADO) values ('47','7','CI','3','1','10:23:20','ATENDIENDO');
Insert into COLABANCARIA.TBFILACLIENTE (ID_FILA_CLIENTE,ID_CLIENTE,TIPO_CLIENTE,PRIORIDAD,NUMERO_FICHA,HORA_LLEGADA,ESTADO) values ('48','22','DI','1','2','10:23:32','ATENDIENDO');
Insert into COLABANCARIA.TBFILACLIENTE (ID_FILA_CLIENTE,ID_CLIENTE,TIPO_CLIENTE,PRIORIDAD,NUMERO_FICHA,HORA_LLEGADA,ESTADO) values ('49','7','CI','3','3','11:08:43','ESPERANDO');
Insert into COLABANCARIA.TBFILACLIENTE (ID_FILA_CLIENTE,ID_CLIENTE,TIPO_CLIENTE,PRIORIDAD,NUMERO_FICHA,HORA_LLEGADA,ESTADO) values ('50','7','CI','3','1','11:09:05','ESPERANDO');
Insert into COLABANCARIA.TBFILACLIENTE (ID_FILA_CLIENTE,ID_CLIENTE,TIPO_CLIENTE,PRIORIDAD,NUMERO_FICHA,HORA_LLEGADA,ESTADO) values ('51','7','CI','3','2','11:10:01','ESPERANDO');
Insert into COLABANCARIA.TBFILACLIENTE (ID_FILA_CLIENTE,ID_CLIENTE,TIPO_CLIENTE,PRIORIDAD,NUMERO_FICHA,HORA_LLEGADA,ESTADO) values ('52','5','AM','2','3','11:11:07','ATENDIENDO');
REM INSERTING into COLABANCARIA.TBTIPOCLIENTE
SET DEFINE OFF;
Insert into COLABANCARIA.TBTIPOCLIENTE (ID_TIPO_CLIENTE,TIPO_CLIENTE,PRIORIDAD) values ('1','DI','1');
Insert into COLABANCARIA.TBTIPOCLIENTE (ID_TIPO_CLIENTE,TIPO_CLIENTE,PRIORIDAD) values ('2','AM','2');
Insert into COLABANCARIA.TBTIPOCLIENTE (ID_TIPO_CLIENTE,TIPO_CLIENTE,PRIORIDAD) values ('3','CI','3');
Insert into COLABANCARIA.TBTIPOCLIENTE (ID_TIPO_CLIENTE,TIPO_CLIENTE,PRIORIDAD) values ('4','CE','4');
REM INSERTING into COLABANCARIA.TBTIPOTRANSACCION
SET DEFINE OFF;
Insert into COLABANCARIA.TBTIPOTRANSACCION (ID_TIPO_TRANSACCION,TIPO_TRANSACCION) values ('1','Deposito');
Insert into COLABANCARIA.TBTIPOTRANSACCION (ID_TIPO_TRANSACCION,TIPO_TRANSACCION) values ('2','Retiro');
Insert into COLABANCARIA.TBTIPOTRANSACCION (ID_TIPO_TRANSACCION,TIPO_TRANSACCION) values ('3','Pago de Servicio');
REM INSERTING into COLABANCARIA.TBTRANSACCION
SET DEFINE OFF;
REM INSERTING into COLABANCARIA.UT_LIB_DYN_QUERIES
SET DEFINE OFF;
REM INSERTING into COLABANCARIA.UT_LIB_STARTUPS
SET DEFINE OFF;
REM INSERTING into COLABANCARIA.UT_LIB_TEARDOWNS
SET DEFINE OFF;
REM INSERTING into COLABANCARIA.UT_LIB_VALIDATIONS
SET DEFINE OFF;
REM INSERTING into COLABANCARIA.UT_LOOKUP_CATEGORIES
SET DEFINE OFF;
Insert into COLABANCARIA.UT_LOOKUP_CATEGORIES (ID,NAME,CREATED_ON,CREATED_BY,UPDATED_ON,UPDATED_BY) values ('AAbcAAbc123123abab','DEFAULT',to_timestamp('19/07/14 05:16:24,000000000 PM','DD/MM/RR HH12:MI:SSXFF AM'),'COLABANCARIA',to_timestamp('19/07/14 05:16:24,000000000 PM','DD/MM/RR HH12:MI:SSXFF AM'),'COLABANCARIA');
REM INSERTING into COLABANCARIA.UT_LOOKUP_DATATYPES
SET DEFINE OFF;
REM INSERTING into COLABANCARIA.UT_LOOKUP_VALUES
SET DEFINE OFF;
REM INSERTING into COLABANCARIA.UT_METADATA
SET DEFINE OFF;
Insert into COLABANCARIA.UT_METADATA (NAME,VALUE) values ('VERSION','20');
REM INSERTING into COLABANCARIA.UT_STARTUPS
SET DEFINE OFF;
REM INSERTING into COLABANCARIA.UT_SUITE
SET DEFINE OFF;
REM INSERTING into COLABANCARIA.UT_SUITE_ITEM_RESULTS
SET DEFINE OFF;
REM INSERTING into COLABANCARIA.UT_SUITE_ITEMS
SET DEFINE OFF;
REM INSERTING into COLABANCARIA.UT_SUITE_RESULTS
SET DEFINE OFF;
REM INSERTING into COLABANCARIA.UT_TEARDOWNS
SET DEFINE OFF;
REM INSERTING into COLABANCARIA.UT_TEST
SET DEFINE OFF;
REM INSERTING into COLABANCARIA.UT_TEST_ARGUMENTS
SET DEFINE OFF;
REM INSERTING into COLABANCARIA.UT_TEST_COVERAGE_STATS
SET DEFINE OFF;
REM INSERTING into COLABANCARIA.UT_TEST_IMPL
SET DEFINE OFF;
REM INSERTING into COLABANCARIA.UT_TEST_IMPL_ARG_RESULTS
SET DEFINE OFF;
REM INSERTING into COLABANCARIA.UT_TEST_IMPL_ARGUMENTS
SET DEFINE OFF;
REM INSERTING into COLABANCARIA.UT_TEST_IMPL_RESULTS
SET DEFINE OFF;
REM INSERTING into COLABANCARIA.UT_TEST_IMPL_VAL_RESULTS
SET DEFINE OFF;
REM INSERTING into COLABANCARIA.UT_TEST_RESULTS
SET DEFINE OFF;
REM INSERTING into COLABANCARIA.UT_VALIDATIONS
SET DEFINE OFF;
--------------------------------------------------------
--  DDL for Index UT_SUITE_ITEMS_UK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COLABANCARIA"."UT_SUITE_ITEMS_UK" ON "COLABANCARIA"."UT_SUITE_ITEMS" ("UT_SID", "UT_ID", "UT_NSID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_LOOKUP_DATATYPES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COLABANCARIA"."UT_LOOKUP_DATATYPES_PK" ON "COLABANCARIA"."UT_LOOKUP_DATATYPES" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_LIB_TEARDOWNS_NAME
--------------------------------------------------------

  CREATE UNIQUE INDEX "COLABANCARIA"."UT_LIB_TEARDOWNS_NAME" ON "COLABANCARIA"."UT_LIB_TEARDOWNS" ("LIB_TEARDOWN_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_TEST_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COLABANCARIA"."UT_TEST_PK" ON "COLABANCARIA"."UT_TEST" ("UT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_TEST_IMPL_VAL_RES_IX2
--------------------------------------------------------

  CREATE INDEX "COLABANCARIA"."UT_TEST_IMPL_VAL_RES_IX2" ON "COLABANCARIA"."UT_TEST_IMPL_VAL_RESULTS" ("UTI_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_LOOKUP_VALUES_UT_LOOKU_IX
--------------------------------------------------------

  CREATE INDEX "COLABANCARIA"."UT_LOOKUP_VALUES_UT_LOOKU_IX" ON "COLABANCARIA"."UT_LOOKUP_VALUES" ("DATA_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_SUITE_ITEM_RESULTS_FK1
--------------------------------------------------------

  CREATE INDEX "COLABANCARIA"."UT_SUITE_ITEM_RESULTS_FK1" ON "COLABANCARIA"."UT_SUITE_ITEM_RESULTS" ("UTSR_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_TEST_RESULTS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COLABANCARIA"."UT_TEST_RESULTS_PK" ON "COLABANCARIA"."UT_TEST_RESULTS" ("UTR_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_LIB_VALIDATIONS_NAME
--------------------------------------------------------

  CREATE UNIQUE INDEX "COLABANCARIA"."UT_LIB_VALIDATIONS_NAME" ON "COLABANCARIA"."UT_LIB_VALIDATIONS" ("LIB_VALIDATION_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_SUITE_ITEMS_IX1
--------------------------------------------------------

  CREATE INDEX "COLABANCARIA"."UT_SUITE_ITEMS_IX1" ON "COLABANCARIA"."UT_SUITE_ITEMS" ("UT_SID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_SUITE_ITEM_RESULTS_UK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COLABANCARIA"."UT_SUITE_ITEM_RESULTS_UK" ON "COLABANCARIA"."UT_SUITE_ITEM_RESULTS" ("UTSR_ID", "UTR_ID", "UTR_NSID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_TEST_IMPL_ARGUMENTS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COLABANCARIA"."UT_TEST_IMPL_ARGUMENTS_PK" ON "COLABANCARIA"."UT_TEST_IMPL_ARGUMENTS" ("UTI_ID", "ARG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_TEARDOWNS_SUITE_IX
--------------------------------------------------------

  CREATE INDEX "COLABANCARIA"."UT_TEARDOWNS_SUITE_IX" ON "COLABANCARIA"."UT_TEARDOWNS" ("UT_SID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_ID_CLIENTE
--------------------------------------------------------

  CREATE UNIQUE INDEX "COLABANCARIA"."PK_ID_CLIENTE" ON "COLABANCARIA"."TBCLIENTE" ("ID_CLIENTE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_TEST_ARGUMENTS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COLABANCARIA"."UT_TEST_ARGUMENTS_PK" ON "COLABANCARIA"."UT_TEST_ARGUMENTS" ("ARG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_LOOKUP_CATEGORIES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COLABANCARIA"."UT_LOOKUP_CATEGORIES_PK" ON "COLABANCARIA"."UT_LOOKUP_CATEGORIES" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_TEARDOWNS_LIB_VALIDN_IX
--------------------------------------------------------

  CREATE INDEX "COLABANCARIA"."UT_TEARDOWNS_LIB_VALIDN_IX" ON "COLABANCARIA"."UT_TEARDOWNS" ("LIB_TEARDOWN_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_SUITE_ITEMS_IX3
--------------------------------------------------------

  CREATE INDEX "COLABANCARIA"."UT_SUITE_ITEMS_IX3" ON "COLABANCARIA"."UT_SUITE_ITEMS" ("UT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_TEST_IMPL_VAL_RES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COLABANCARIA"."UT_TEST_IMPL_VAL_RES_PK" ON "COLABANCARIA"."UT_TEST_IMPL_VAL_RESULTS" ("UTIVR_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_TEST_ARGUMENTS_IX
--------------------------------------------------------

  CREATE INDEX "COLABANCARIA"."UT_TEST_ARGUMENTS_IX" ON "COLABANCARIA"."UT_TEST_ARGUMENTS" ("UT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_LOOKUP_CATEGORIES_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "COLABANCARIA"."UT_LOOKUP_CATEGORIES_UK1" ON "COLABANCARIA"."UT_LOOKUP_CATEGORIES" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_TEST_IMPL_RESULTS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COLABANCARIA"."UT_TEST_IMPL_RESULTS_PK" ON "COLABANCARIA"."UT_TEST_IMPL_RESULTS" ("UTIR_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_TEST_IMPL_ARGUMENTS_UT_IX2
--------------------------------------------------------

  CREATE INDEX "COLABANCARIA"."UT_TEST_IMPL_ARGUMENTS_UT_IX2" ON "COLABANCARIA"."UT_TEST_IMPL_ARGUMENTS" ("UTI_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_TEST_COVERAGE_STATS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COLABANCARIA"."UT_TEST_COVERAGE_STATS_PK" ON "COLABANCARIA"."UT_TEST_COVERAGE_STATS" ("UTC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_TEARDOWNS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COLABANCARIA"."UT_TEARDOWNS_PK" ON "COLABANCARIA"."UT_TEARDOWNS" ("TEARDOWN_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_TEST_IMPL_RESULTS_UT_T_IX2
--------------------------------------------------------

  CREATE INDEX "COLABANCARIA"."UT_TEST_IMPL_RESULTS_UT_T_IX2" ON "COLABANCARIA"."UT_TEST_IMPL_RESULTS" ("UTR_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_LIB_STARTUPS_NAME
--------------------------------------------------------

  CREATE UNIQUE INDEX "COLABANCARIA"."UT_LIB_STARTUPS_NAME" ON "COLABANCARIA"."UT_LIB_STARTUPS" ("LIB_STARTUP_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_SUITE_RESULTS_IX
--------------------------------------------------------

  CREATE INDEX "COLABANCARIA"."UT_SUITE_RESULTS_IX" ON "COLABANCARIA"."UT_SUITE_RESULTS" ("UT_SID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_TEST_IMPL_ARG_RESULTS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COLABANCARIA"."UT_TEST_IMPL_ARG_RESULTS_PK" ON "COLABANCARIA"."UT_TEST_IMPL_ARG_RESULTS" ("UTIAR_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_VALIDATIONS_LIB_VALIDN_IX
--------------------------------------------------------

  CREATE INDEX "COLABANCARIA"."UT_VALIDATIONS_LIB_VALIDN_IX" ON "COLABANCARIA"."UT_VALIDATIONS" ("LIB_VALIDATION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_SUITE_RESULTS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COLABANCARIA"."UT_SUITE_RESULTS_PK" ON "COLABANCARIA"."UT_SUITE_RESULTS" ("UTSR_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_LIB_DYN_QUERIES_NAME
--------------------------------------------------------

  CREATE UNIQUE INDEX "COLABANCARIA"."UT_LIB_DYN_QUERIES_NAME" ON "COLABANCARIA"."UT_LIB_DYN_QUERIES" ("LIB_DYN_QUERY_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_METADATA_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COLABANCARIA"."UT_METADATA_PK" ON "COLABANCARIA"."UT_METADATA" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_TEST_RESULTS_UT_TEST_IX1
--------------------------------------------------------

  CREATE INDEX "COLABANCARIA"."UT_TEST_RESULTS_UT_TEST_IX1" ON "COLABANCARIA"."UT_TEST_RESULTS" ("UT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_STARTUPS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COLABANCARIA"."UT_STARTUPS_PK" ON "COLABANCARIA"."UT_STARTUPS" ("STARTUP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_TEST_COV_STATS_UT_T_IX2
--------------------------------------------------------

  CREATE INDEX "COLABANCARIA"."UT_TEST_COV_STATS_UT_T_IX2" ON "COLABANCARIA"."UT_TEST_COVERAGE_STATS" ("UTIR_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_ID_BITACORA_TRANSACCION
--------------------------------------------------------

  CREATE UNIQUE INDEX "COLABANCARIA"."PK_ID_BITACORA_TRANSACCION" ON "COLABANCARIA"."TBBITACORATRANSACCION" ("ID_BITACORA_TRANSACCION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_LOOKUP_DTS_CAT_ID_IX
--------------------------------------------------------

  CREATE INDEX "COLABANCARIA"."UT_LOOKUP_DTS_CAT_ID_IX" ON "COLABANCARIA"."UT_LOOKUP_DATATYPES" ("CAT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_CAJERO
--------------------------------------------------------

  CREATE UNIQUE INDEX "COLABANCARIA"."PK_CAJERO" ON "COLABANCARIA"."TBCAJERO" ("ID_CAJERO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_TEST_IMPL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COLABANCARIA"."UT_TEST_IMPL_PK" ON "COLABANCARIA"."UT_TEST_IMPL" ("UTI_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_STARTUPS_TEST_IX
--------------------------------------------------------

  CREATE INDEX "COLABANCARIA"."UT_STARTUPS_TEST_IX" ON "COLABANCARIA"."UT_STARTUPS" ("UT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_VALIDATIONS_TEST_IMPL_IX
--------------------------------------------------------

  CREATE INDEX "COLABANCARIA"."UT_VALIDATIONS_TEST_IMPL_IX" ON "COLABANCARIA"."UT_VALIDATIONS" ("UTI_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_LIB_VALIDATIONS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COLABANCARIA"."UT_LIB_VALIDATIONS_PK" ON "COLABANCARIA"."UT_LIB_VALIDATIONS" ("LIB_VALIDATION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_VALIDATIONS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COLABANCARIA"."UT_VALIDATIONS_PK" ON "COLABANCARIA"."UT_VALIDATIONS" ("VALIDATION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_SUITE_ITEM_RESULTS_FK3
--------------------------------------------------------

  CREATE INDEX "COLABANCARIA"."UT_SUITE_ITEM_RESULTS_FK3" ON "COLABANCARIA"."UT_SUITE_ITEM_RESULTS" ("UTR_NSID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_TEST_IMPL_ARG_RESULTS_IX3
--------------------------------------------------------

  CREATE INDEX "COLABANCARIA"."UT_TEST_IMPL_ARG_RESULTS_IX3" ON "COLABANCARIA"."UT_TEST_IMPL_ARG_RESULTS" ("UTIR_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_SUITE_ITEMS_IX2
--------------------------------------------------------

  CREATE INDEX "COLABANCARIA"."UT_SUITE_ITEMS_IX2" ON "COLABANCARIA"."UT_SUITE_ITEMS" ("UT_NSID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_TEST_IMPL_ARG_RESULTS_IX1
--------------------------------------------------------

  CREATE INDEX "COLABANCARIA"."UT_TEST_IMPL_ARG_RESULTS_IX1" ON "COLABANCARIA"."UT_TEST_IMPL_ARG_RESULTS" ("UTI_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_STARTUPS_SUITE_IX
--------------------------------------------------------

  CREATE INDEX "COLABANCARIA"."UT_STARTUPS_SUITE_IX" ON "COLABANCARIA"."UT_STARTUPS" ("UT_SID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_TEST_IMPL_ARG_RESULTS_IX2
--------------------------------------------------------

  CREATE INDEX "COLABANCARIA"."UT_TEST_IMPL_ARG_RESULTS_IX2" ON "COLABANCARIA"."UT_TEST_IMPL_ARG_RESULTS" ("ARG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_LIB_DYN_QUERIES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COLABANCARIA"."UT_LIB_DYN_QUERIES_PK" ON "COLABANCARIA"."UT_LIB_DYN_QUERIES" ("LIB_DYN_QUERY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_TEST_IMPL_UT_TEST_IX
--------------------------------------------------------

  CREATE INDEX "COLABANCARIA"."UT_TEST_IMPL_UT_TEST_IX" ON "COLABANCARIA"."UT_TEST_IMPL" ("UT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_TEST_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "COLABANCARIA"."UT_TEST_UK1" ON "COLABANCARIA"."UT_TEST" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_ID_FILA_CLIENTE
--------------------------------------------------------

  CREATE UNIQUE INDEX "COLABANCARIA"."PK_ID_FILA_CLIENTE" ON "COLABANCARIA"."TBFILACLIENTE" ("ID_FILA_CLIENTE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_TEST_LIB_DYN_QUERIES_IX
--------------------------------------------------------

  CREATE INDEX "COLABANCARIA"."UT_TEST_LIB_DYN_QUERIES_IX" ON "COLABANCARIA"."UT_TEST_IMPL" ("LIB_DYN_QUERY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_ID_TIPO_TRANSACCION
--------------------------------------------------------

  CREATE UNIQUE INDEX "COLABANCARIA"."PK_ID_TIPO_TRANSACCION" ON "COLABANCARIA"."TBTIPOTRANSACCION" ("ID_TIPO_TRANSACCION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_TEST_IMPL_ARGUMENTS_UT_IX1
--------------------------------------------------------

  CREATE INDEX "COLABANCARIA"."UT_TEST_IMPL_ARGUMENTS_UT_IX1" ON "COLABANCARIA"."UT_TEST_IMPL_ARGUMENTS" ("ARG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_TEST_IMPL_VAL_RES_IX3
--------------------------------------------------------

  CREATE INDEX "COLABANCARIA"."UT_TEST_IMPL_VAL_RES_IX3" ON "COLABANCARIA"."UT_TEST_IMPL_VAL_RESULTS" ("UTIR_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_LOOKUP_VALUES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COLABANCARIA"."UT_LOOKUP_VALUES_PK" ON "COLABANCARIA"."UT_LOOKUP_VALUES" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_TEST_IMPL_RESULTS_UT_T_IX1
--------------------------------------------------------

  CREATE INDEX "COLABANCARIA"."UT_TEST_IMPL_RESULTS_UT_T_IX1" ON "COLABANCARIA"."UT_TEST_IMPL_RESULTS" ("UTI_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_TEST_IMPL_VAL_RES_IX1
--------------------------------------------------------

  CREATE INDEX "COLABANCARIA"."UT_TEST_IMPL_VAL_RES_IX1" ON "COLABANCARIA"."UT_TEST_IMPL_VAL_RESULTS" ("VAL_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_SUITE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COLABANCARIA"."UT_SUITE_PK" ON "COLABANCARIA"."UT_SUITE" ("UT_SID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_TEST_COV_STATS_UT_T_IX1
--------------------------------------------------------

  CREATE INDEX "COLABANCARIA"."UT_TEST_COV_STATS_UT_T_IX1" ON "COLABANCARIA"."UT_TEST_COVERAGE_STATS" ("UTI_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_LIB_STARTUPS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COLABANCARIA"."UT_LIB_STARTUPS_PK" ON "COLABANCARIA"."UT_LIB_STARTUPS" ("LIB_STARTUP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_LIB_TEARDOWNS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COLABANCARIA"."UT_LIB_TEARDOWNS_PK" ON "COLABANCARIA"."UT_LIB_TEARDOWNS" ("LIB_TEARDOWN_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_LOOKUP_DATATYPES_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "COLABANCARIA"."UT_LOOKUP_DATATYPES_UK1" ON "COLABANCARIA"."UT_LOOKUP_DATATYPES" ("CAT_ID", "TYPE_STRING") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_SUITE_ITEM_RESULTS_FK2
--------------------------------------------------------

  CREATE INDEX "COLABANCARIA"."UT_SUITE_ITEM_RESULTS_FK2" ON "COLABANCARIA"."UT_SUITE_ITEM_RESULTS" ("UTR_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_STARTUPS_LIB_VALIDN_IX
--------------------------------------------------------

  CREATE INDEX "COLABANCARIA"."UT_STARTUPS_LIB_VALIDN_IX" ON "COLABANCARIA"."UT_STARTUPS" ("LIB_STARTUP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_TEST_IMPL_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "COLABANCARIA"."UT_TEST_IMPL_UK1" ON "COLABANCARIA"."UT_TEST_IMPL" ("UT_ID", "NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_TIPO_CLIENTE
--------------------------------------------------------

  CREATE UNIQUE INDEX "COLABANCARIA"."PK_TIPO_CLIENTE" ON "COLABANCARIA"."TBTIPOCLIENTE" ("ID_TIPO_CLIENTE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index UT_TEARDOWNS_TEST_IX
--------------------------------------------------------

  CREATE INDEX "COLABANCARIA"."UT_TEARDOWNS_TEST_IX" ON "COLABANCARIA"."UT_TEARDOWNS" ("UT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_ID_TRANSACCION
--------------------------------------------------------

  CREATE UNIQUE INDEX "COLABANCARIA"."PK_ID_TRANSACCION" ON "COLABANCARIA"."TBTRANSACCION" ("ID_TRANSACCION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  Constraints for Table UT_LOOKUP_VALUES
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."UT_LOOKUP_VALUES" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LOOKUP_VALUES" MODIFY ("CREATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LOOKUP_VALUES" MODIFY ("CREATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LOOKUP_VALUES" MODIFY ("UPDATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LOOKUP_VALUES" MODIFY ("UPDATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LOOKUP_VALUES" ADD CONSTRAINT "UT_LOOKUP_VALUES_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table UT_TEST_RESULTS
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."UT_TEST_RESULTS" MODIFY ("COVERAGE" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_RESULTS" MODIFY ("CREATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_RESULTS" MODIFY ("CREATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_RESULTS" MODIFY ("UPDATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_RESULTS" MODIFY ("UPDATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_RESULTS" MODIFY ("UTR_ID" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_RESULTS" MODIFY ("UT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_RESULTS" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_RESULTS" MODIFY ("STATUS" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_RESULTS" MODIFY ("RUN_DATE" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_RESULTS" ADD CONSTRAINT "UT_TEST_RESULTS_PK" PRIMARY KEY ("UTR_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table UT_TEST_IMPL
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL" MODIFY ("CREATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL" MODIFY ("CREATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL" MODIFY ("UPDATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL" MODIFY ("UPDATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL" MODIFY ("UT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL" ADD CONSTRAINT "UT_DYN_QUERY_CHECK" CHECK ("DYNAMIC_VALUE_QUERY" IS NULL OR "LIB_DYN_QUERY_ID" IS NULL) ENABLE;
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL" ADD CONSTRAINT "UT_TEST_IMPL_PK" PRIMARY KEY ("UTI_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL" ADD CONSTRAINT "UT_TEST_IMPL_UK1" UNIQUE ("UT_ID", "NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table TBCLIENTE
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."TBCLIENTE" ADD CONSTRAINT "PK_ID_CLIENTE" PRIMARY KEY ("ID_CLIENTE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table UT_TEST_COVERAGE_STATS
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."UT_TEST_COVERAGE_STATS" MODIFY ("CREATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_COVERAGE_STATS" MODIFY ("CREATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_COVERAGE_STATS" MODIFY ("UPDATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_COVERAGE_STATS" MODIFY ("UPDATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_COVERAGE_STATS" ADD CONSTRAINT "UT_TEST_COVERAGE_STATS_PK" PRIMARY KEY ("UTC_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table TBTIPOCLIENTE
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."TBTIPOCLIENTE" ADD CONSTRAINT "PK_TIPO_CLIENTE" PRIMARY KEY ("ID_TIPO_CLIENTE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table UT_LIB_VALIDATIONS
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."UT_LIB_VALIDATIONS" MODIFY ("LIB_VALIDATION_ID" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LIB_VALIDATIONS" MODIFY ("LIB_VALIDATION_NAME" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LIB_VALIDATIONS" MODIFY ("LIB_VALIDATION_CLASS" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LIB_VALIDATIONS" MODIFY ("LIB_VALIDATION" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LIB_VALIDATIONS" MODIFY ("CREATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LIB_VALIDATIONS" MODIFY ("CREATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LIB_VALIDATIONS" MODIFY ("UPDATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LIB_VALIDATIONS" MODIFY ("UPDATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LIB_VALIDATIONS" ADD CONSTRAINT "UT_LIB_VALIDATIONS_NAME" UNIQUE ("LIB_VALIDATION_NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "COLABANCARIA"."UT_LIB_VALIDATIONS" ADD CONSTRAINT "UT_LIB_VALIDATIONS_PK" PRIMARY KEY ("LIB_VALIDATION_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table UT_METADATA
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."UT_METADATA" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_METADATA" MODIFY ("VALUE" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_METADATA" ADD CONSTRAINT "UT_METADATA_PK" PRIMARY KEY ("NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table TBTIPOTRANSACCION
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."TBTIPOTRANSACCION" ADD CONSTRAINT "PK_ID_TIPO_TRANSACCION" PRIMARY KEY ("ID_TIPO_TRANSACCION")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table UT_TEST
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."UT_TEST" MODIFY ("CREATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST" MODIFY ("CREATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST" MODIFY ("UPDATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST" MODIFY ("UPDATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST" MODIFY ("UT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST" MODIFY ("OBJECT_NAME" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST" MODIFY ("OBJECT_TYPE" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST" MODIFY ("OBJECT_OWNER" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST" ADD CONSTRAINT "UT_TEST_PK" PRIMARY KEY ("UT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "COLABANCARIA"."UT_TEST" ADD CONSTRAINT "UT_TEST_UK1" UNIQUE ("NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table UT_TEST_IMPL_ARGUMENTS
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_ARGUMENTS" MODIFY ("CREATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_ARGUMENTS" MODIFY ("CREATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_ARGUMENTS" MODIFY ("UPDATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_ARGUMENTS" MODIFY ("UPDATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_ARGUMENTS" MODIFY ("UTI_ID" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_ARGUMENTS" MODIFY ("ARG_ID" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_ARGUMENTS" MODIFY ("TEST_OUTVAL" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_ARGUMENTS" ADD CONSTRAINT "UT_TEST_IMPL_ARGUMENTS_PK" PRIMARY KEY ("UTI_ID", "ARG_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table UT_LIB_DYN_QUERIES
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."UT_LIB_DYN_QUERIES" MODIFY ("LIB_DYN_QUERY_ID" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LIB_DYN_QUERIES" MODIFY ("LIB_DYN_QUERY_NAME" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LIB_DYN_QUERIES" MODIFY ("LIB_DYN_QUERY_CLASS" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LIB_DYN_QUERIES" MODIFY ("LIB_DYN_QUERY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LIB_DYN_QUERIES" MODIFY ("CREATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LIB_DYN_QUERIES" MODIFY ("CREATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LIB_DYN_QUERIES" MODIFY ("UPDATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LIB_DYN_QUERIES" MODIFY ("UPDATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LIB_DYN_QUERIES" ADD CONSTRAINT "UT_LIB_DYN_QUERIES_NAME" UNIQUE ("LIB_DYN_QUERY_NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "COLABANCARIA"."UT_LIB_DYN_QUERIES" ADD CONSTRAINT "UT_LIB_DYN_QUERIES_PK" PRIMARY KEY ("LIB_DYN_QUERY_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table UT_LIB_STARTUPS
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."UT_LIB_STARTUPS" MODIFY ("LIB_STARTUP_ID" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LIB_STARTUPS" MODIFY ("LIB_STARTUP_NAME" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LIB_STARTUPS" MODIFY ("LIB_STARTUP_CLASS" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LIB_STARTUPS" MODIFY ("LIB_STARTUP" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LIB_STARTUPS" MODIFY ("CREATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LIB_STARTUPS" MODIFY ("CREATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LIB_STARTUPS" MODIFY ("UPDATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LIB_STARTUPS" MODIFY ("UPDATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LIB_STARTUPS" ADD CONSTRAINT "UT_LIB_STARTUPS_NAME" UNIQUE ("LIB_STARTUP_NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "COLABANCARIA"."UT_LIB_STARTUPS" ADD CONSTRAINT "UT_LIB_STARTUPS_PK" PRIMARY KEY ("LIB_STARTUP_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table UT_TEST_ARGUMENTS
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."UT_TEST_ARGUMENTS" MODIFY ("CREATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_ARGUMENTS" MODIFY ("CREATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_ARGUMENTS" MODIFY ("UPDATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_ARGUMENTS" MODIFY ("UPDATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_ARGUMENTS" MODIFY ("ARG_ID" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_ARGUMENTS" MODIFY ("OWNER" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_ARGUMENTS" MODIFY ("OBJECT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_ARGUMENTS" MODIFY ("POSITION" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_ARGUMENTS" MODIFY ("SEQUENCE" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_ARGUMENTS" MODIFY ("DATA_LEVEL" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_ARGUMENTS" ADD CONSTRAINT "UT_TEST_ARGUMENTS_PK" PRIMARY KEY ("ARG_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table UT_SUITE_RESULTS
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."UT_SUITE_RESULTS" MODIFY ("UTSR_ID" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_SUITE_RESULTS" MODIFY ("UT_SID" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_SUITE_RESULTS" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_SUITE_RESULTS" MODIFY ("STATUS" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_SUITE_RESULTS" MODIFY ("COVERAGE" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_SUITE_RESULTS" MODIFY ("RUN_DATE" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_SUITE_RESULTS" MODIFY ("CREATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_SUITE_RESULTS" MODIFY ("CREATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_SUITE_RESULTS" MODIFY ("UPDATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_SUITE_RESULTS" MODIFY ("UPDATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_SUITE_RESULTS" ADD CONSTRAINT "UT_SUITE_RESULTS_PK" PRIMARY KEY ("UTSR_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table UT_STARTUPS
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."UT_STARTUPS" MODIFY ("STARTUP_ID" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_STARTUPS" MODIFY ("INDEX_NO" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_STARTUPS" MODIFY ("CREATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_STARTUPS" MODIFY ("CREATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_STARTUPS" MODIFY ("UPDATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_STARTUPS" MODIFY ("UPDATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_STARTUPS" ADD CONSTRAINT "UT_STARTUPS_CHECK" CHECK ("STARTUP" IS NULL  OR "LIB_STARTUP_ID" IS NULL) ENABLE;
 
  ALTER TABLE "COLABANCARIA"."UT_STARTUPS" ADD CONSTRAINT "UT_STARTUPS_PK" PRIMARY KEY ("STARTUP_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table UT_SUITE
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."UT_SUITE" MODIFY ("UT_SID" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_SUITE" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_SUITE" MODIFY ("CREATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_SUITE" MODIFY ("CREATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_SUITE" MODIFY ("UPDATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_SUITE" MODIFY ("UPDATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_SUITE" ADD CONSTRAINT "UT_SUITE_PK" PRIMARY KEY ("UT_SID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table UT_SUITE_ITEMS
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."UT_SUITE_ITEMS" MODIFY ("UT_SID" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_SUITE_ITEMS" MODIFY ("RUN_START" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_SUITE_ITEMS" MODIFY ("RUN_TEAR" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_SUITE_ITEMS" MODIFY ("SEQUENCE" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_SUITE_ITEMS" MODIFY ("CREATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_SUITE_ITEMS" MODIFY ("CREATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_SUITE_ITEMS" MODIFY ("UPDATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_SUITE_ITEMS" MODIFY ("UPDATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_SUITE_ITEMS" ADD CONSTRAINT "UT_SUITE_ITEMS_UK" UNIQUE ("UT_SID", "UT_ID", "UT_NSID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table TBFILACLIENTE
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."TBFILACLIENTE" ADD CONSTRAINT "PK_ID_FILA_CLIENTE" PRIMARY KEY ("ID_FILA_CLIENTE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table UT_LOOKUP_DATATYPES
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."UT_LOOKUP_DATATYPES" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LOOKUP_DATATYPES" MODIFY ("CREATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LOOKUP_DATATYPES" MODIFY ("CREATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LOOKUP_DATATYPES" MODIFY ("UPDATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LOOKUP_DATATYPES" MODIFY ("UPDATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LOOKUP_DATATYPES" ADD CONSTRAINT "UT_LOOKUP_DATATYPES_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "COLABANCARIA"."UT_LOOKUP_DATATYPES" ADD CONSTRAINT "UT_LOOKUP_DATATYPES_UK1" UNIQUE ("CAT_ID", "TYPE_STRING")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table UT_TEST_IMPL_ARG_RESULTS
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_ARG_RESULTS" MODIFY ("CREATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_ARG_RESULTS" MODIFY ("CREATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_ARG_RESULTS" MODIFY ("UPDATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_ARG_RESULTS" MODIFY ("UPDATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_ARG_RESULTS" MODIFY ("UTIAR_ID" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_ARG_RESULTS" MODIFY ("UTI_ID" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_ARG_RESULTS" MODIFY ("ARG_ID" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_ARG_RESULTS" MODIFY ("RUN_DATE" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_ARG_RESULTS" MODIFY ("STATUS" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_ARG_RESULTS" ADD CONSTRAINT "UT_TEST_IMPL_ARG_RESULTS_PK" PRIMARY KEY ("UTIAR_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table UT_TEST_IMPL_VAL_RESULTS
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_VAL_RESULTS" MODIFY ("UTIVR_ID" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_VAL_RESULTS" MODIFY ("UTI_ID" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_VAL_RESULTS" MODIFY ("VAL_ID" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_VAL_RESULTS" MODIFY ("VAL_TYPE" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_VAL_RESULTS" MODIFY ("STATUS" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_VAL_RESULTS" MODIFY ("CREATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_VAL_RESULTS" MODIFY ("CREATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_VAL_RESULTS" MODIFY ("UPDATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_VAL_RESULTS" MODIFY ("UPDATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_VAL_RESULTS" ADD CONSTRAINT "UT_TEST_IMPL_VAL_RES_PK" PRIMARY KEY ("UTIVR_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table UT_TEST_IMPL_RESULTS
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_RESULTS" MODIFY ("CREATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_RESULTS" MODIFY ("CREATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_RESULTS" MODIFY ("UPDATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_RESULTS" MODIFY ("UPDATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_RESULTS" MODIFY ("UTIR_ID" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_RESULTS" MODIFY ("UTI_ID" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_RESULTS" MODIFY ("UTR_ID" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_RESULTS" MODIFY ("NAME" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_RESULTS" MODIFY ("STATUS" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_RESULTS" MODIFY ("RUN_DATE" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_RESULTS" ADD CONSTRAINT "UT_TEST_IMPL_RESULTS_PK" PRIMARY KEY ("UTIR_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table UT_TEARDOWNS
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."UT_TEARDOWNS" MODIFY ("TEARDOWN_ID" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEARDOWNS" MODIFY ("INDEX_NO" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEARDOWNS" MODIFY ("CREATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEARDOWNS" MODIFY ("CREATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEARDOWNS" MODIFY ("UPDATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEARDOWNS" MODIFY ("UPDATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_TEARDOWNS" ADD CONSTRAINT "UT_TEARDOWNS_CHECK" CHECK ("TEARDOWN" IS NULL  OR "LIB_TEARDOWN_ID" IS NULL) ENABLE;
 
  ALTER TABLE "COLABANCARIA"."UT_TEARDOWNS" ADD CONSTRAINT "UT_TEARDOWNS_PK" PRIMARY KEY ("TEARDOWN_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table TBCAJERO
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."TBCAJERO" ADD CONSTRAINT "PK_CAJERO" PRIMARY KEY ("ID_CAJERO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table UT_LIB_TEARDOWNS
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."UT_LIB_TEARDOWNS" MODIFY ("LIB_TEARDOWN_ID" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LIB_TEARDOWNS" MODIFY ("LIB_TEARDOWN_NAME" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LIB_TEARDOWNS" MODIFY ("LIB_TEARDOWN_CLASS" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LIB_TEARDOWNS" MODIFY ("LIB_TEARDOWN" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LIB_TEARDOWNS" MODIFY ("CREATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LIB_TEARDOWNS" MODIFY ("CREATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LIB_TEARDOWNS" MODIFY ("UPDATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LIB_TEARDOWNS" MODIFY ("UPDATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LIB_TEARDOWNS" ADD CONSTRAINT "UT_LIB_TEARDOWNS_NAME" UNIQUE ("LIB_TEARDOWN_NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "COLABANCARIA"."UT_LIB_TEARDOWNS" ADD CONSTRAINT "UT_LIB_TEARDOWNS_PK" PRIMARY KEY ("LIB_TEARDOWN_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table TBTRANSACCION
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."TBTRANSACCION" ADD CONSTRAINT "PK_ID_TRANSACCION" PRIMARY KEY ("ID_TRANSACCION")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table UT_LOOKUP_CATEGORIES
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."UT_LOOKUP_CATEGORIES" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LOOKUP_CATEGORIES" MODIFY ("CREATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LOOKUP_CATEGORIES" MODIFY ("CREATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LOOKUP_CATEGORIES" MODIFY ("UPDATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LOOKUP_CATEGORIES" MODIFY ("UPDATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_LOOKUP_CATEGORIES" ADD CONSTRAINT "UT_LOOKUP_CATEGORIES_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "COLABANCARIA"."UT_LOOKUP_CATEGORIES" ADD CONSTRAINT "UT_LOOKUP_CATEGORIES_UK1" UNIQUE ("NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table UT_VALIDATIONS
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."UT_VALIDATIONS" MODIFY ("VALIDATION_ID" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_VALIDATIONS" MODIFY ("UTI_ID" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_VALIDATIONS" MODIFY ("INDEX_NO" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_VALIDATIONS" MODIFY ("APPLY_VALIDATION" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_VALIDATIONS" MODIFY ("CREATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_VALIDATIONS" MODIFY ("CREATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_VALIDATIONS" MODIFY ("UPDATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_VALIDATIONS" MODIFY ("UPDATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_VALIDATIONS" ADD CONSTRAINT "UT_VALIDATIONS_CHECK" CHECK ("VALIDATION" IS NULL OR "LIB_VALIDATION_ID" IS NULL) ENABLE;
 
  ALTER TABLE "COLABANCARIA"."UT_VALIDATIONS" ADD CONSTRAINT "UT_VALIDATIONS_PK" PRIMARY KEY ("VALIDATION_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table TBBITACORATRANSACCION
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."TBBITACORATRANSACCION" ADD CONSTRAINT "PK_ID_BITACORA_TRANSACCION" PRIMARY KEY ("ID_BITACORA_TRANSACCION")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table UT_SUITE_ITEM_RESULTS
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."UT_SUITE_ITEM_RESULTS" MODIFY ("UTSR_ID" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_SUITE_ITEM_RESULTS" MODIFY ("SEQUENCE" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_SUITE_ITEM_RESULTS" MODIFY ("CREATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_SUITE_ITEM_RESULTS" MODIFY ("CREATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_SUITE_ITEM_RESULTS" MODIFY ("UPDATED_ON" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_SUITE_ITEM_RESULTS" MODIFY ("UPDATED_BY" NOT NULL ENABLE);
 
  ALTER TABLE "COLABANCARIA"."UT_SUITE_ITEM_RESULTS" ADD CONSTRAINT "UT_SUITE_ITEM_RESULTS_UK" UNIQUE ("UTSR_ID", "UTR_ID", "UTR_NSID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table TBCLIENTE
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."TBCLIENTE" ADD CONSTRAINT "FK_TBCLIENTE_TBTIPOCLIENTE" FOREIGN KEY ("ID_TIPO_CLIENTE")
	  REFERENCES "COLABANCARIA"."TBTIPOCLIENTE" ("ID_TIPO_CLIENTE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table TBFILACLIENTE
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."TBFILACLIENTE" ADD CONSTRAINT "FK_TBFILACLIENTE_TBCLIENTE" FOREIGN KEY ("ID_CLIENTE")
	  REFERENCES "COLABANCARIA"."TBCLIENTE" ("ID_CLIENTE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table TBTRANSACCION
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."TBTRANSACCION" ADD CONSTRAINT "FK_tbTransaccion_tbCajero" FOREIGN KEY ("ID_CAJERO")
	  REFERENCES "COLABANCARIA"."TBCAJERO" ("ID_CAJERO") ENABLE;
 
  ALTER TABLE "COLABANCARIA"."TBTRANSACCION" ADD CONSTRAINT "FK_tbTransaccion_tbCliente" FOREIGN KEY ("ID_CLIENTE")
	  REFERENCES "COLABANCARIA"."TBCLIENTE" ("ID_CLIENTE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table UT_LOOKUP_DATATYPES
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."UT_LOOKUP_DATATYPES" ADD CONSTRAINT "UT_LOOKUP_DATATYPES_UT_LO_FK1" FOREIGN KEY ("CAT_ID")
	  REFERENCES "COLABANCARIA"."UT_LOOKUP_CATEGORIES" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table UT_LOOKUP_VALUES
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."UT_LOOKUP_VALUES" ADD CONSTRAINT "UT_LOOKUP_VALUES_UT_LOOKU_FK1" FOREIGN KEY ("DATA_ID")
	  REFERENCES "COLABANCARIA"."UT_LOOKUP_DATATYPES" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table UT_STARTUPS
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."UT_STARTUPS" ADD CONSTRAINT "UT_STARTUPS_LIB_VALIDN_FK1" FOREIGN KEY ("LIB_STARTUP_ID")
	  REFERENCES "COLABANCARIA"."UT_LIB_STARTUPS" ("LIB_STARTUP_ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "COLABANCARIA"."UT_STARTUPS" ADD CONSTRAINT "UT_STARTUPS_SUITE_FK1" FOREIGN KEY ("UT_SID")
	  REFERENCES "COLABANCARIA"."UT_SUITE" ("UT_SID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "COLABANCARIA"."UT_STARTUPS" ADD CONSTRAINT "UT_STARTUPS_TEST_FK1" FOREIGN KEY ("UT_ID")
	  REFERENCES "COLABANCARIA"."UT_TEST" ("UT_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table UT_SUITE_ITEM_RESULTS
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."UT_SUITE_ITEM_RESULTS" ADD CONSTRAINT "UT_SUITE_ITEM_RESULTS_FK1" FOREIGN KEY ("UTSR_ID")
	  REFERENCES "COLABANCARIA"."UT_SUITE_RESULTS" ("UTSR_ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "COLABANCARIA"."UT_SUITE_ITEM_RESULTS" ADD CONSTRAINT "UT_SUITE_ITEM_RESULTS_FK2" FOREIGN KEY ("UTR_ID")
	  REFERENCES "COLABANCARIA"."UT_TEST_RESULTS" ("UTR_ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "COLABANCARIA"."UT_SUITE_ITEM_RESULTS" ADD CONSTRAINT "UT_SUITE_ITEM_RESULTS_FK3" FOREIGN KEY ("UTR_NSID")
	  REFERENCES "COLABANCARIA"."UT_SUITE_RESULTS" ("UTSR_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table UT_SUITE_ITEMS
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."UT_SUITE_ITEMS" ADD CONSTRAINT "UT_SUITE_ITEMS_FK1" FOREIGN KEY ("UT_SID")
	  REFERENCES "COLABANCARIA"."UT_SUITE" ("UT_SID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "COLABANCARIA"."UT_SUITE_ITEMS" ADD CONSTRAINT "UT_SUITE_ITEMS_FK2" FOREIGN KEY ("UT_ID")
	  REFERENCES "COLABANCARIA"."UT_TEST" ("UT_ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "COLABANCARIA"."UT_SUITE_ITEMS" ADD CONSTRAINT "UT_SUITE_ITEMS_FK3" FOREIGN KEY ("UT_NSID")
	  REFERENCES "COLABANCARIA"."UT_SUITE" ("UT_SID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table UT_SUITE_RESULTS
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."UT_SUITE_RESULTS" ADD CONSTRAINT "UT_SUITE_RESULTS_FK1" FOREIGN KEY ("UT_SID")
	  REFERENCES "COLABANCARIA"."UT_SUITE" ("UT_SID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table UT_TEARDOWNS
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."UT_TEARDOWNS" ADD CONSTRAINT "UT_TEARDOWNS_LIB_VALIDN_FK1" FOREIGN KEY ("LIB_TEARDOWN_ID")
	  REFERENCES "COLABANCARIA"."UT_LIB_TEARDOWNS" ("LIB_TEARDOWN_ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "COLABANCARIA"."UT_TEARDOWNS" ADD CONSTRAINT "UT_TEARDOWNS_SUITE_FK1" FOREIGN KEY ("UT_SID")
	  REFERENCES "COLABANCARIA"."UT_SUITE" ("UT_SID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "COLABANCARIA"."UT_TEARDOWNS" ADD CONSTRAINT "UT_TEARDOWNS_TEST_FK1" FOREIGN KEY ("UT_ID")
	  REFERENCES "COLABANCARIA"."UT_TEST" ("UT_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table UT_TEST_ARGUMENTS
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."UT_TEST_ARGUMENTS" ADD CONSTRAINT "UT_TEST_ARGUMENTS_FK" FOREIGN KEY ("UT_ID")
	  REFERENCES "COLABANCARIA"."UT_TEST" ("UT_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table UT_TEST_COVERAGE_STATS
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."UT_TEST_COVERAGE_STATS" ADD CONSTRAINT "UT_TEST_COV_STATS_UT_T_FK1" FOREIGN KEY ("UTI_ID")
	  REFERENCES "COLABANCARIA"."UT_TEST_IMPL" ("UTI_ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_COVERAGE_STATS" ADD CONSTRAINT "UT_TEST_COV_STATS_UT_T_FK2" FOREIGN KEY ("UTIR_ID")
	  REFERENCES "COLABANCARIA"."UT_TEST_IMPL_RESULTS" ("UTIR_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table UT_TEST_IMPL
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL" ADD CONSTRAINT "UT_TEST_IMPL_UT_TEST_FK1" FOREIGN KEY ("UT_ID")
	  REFERENCES "COLABANCARIA"."UT_TEST" ("UT_ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL" ADD CONSTRAINT "UT_TEST_LIB_DYN_QUERIES_FK1" FOREIGN KEY ("LIB_DYN_QUERY_ID")
	  REFERENCES "COLABANCARIA"."UT_LIB_DYN_QUERIES" ("LIB_DYN_QUERY_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table UT_TEST_IMPL_ARG_RESULTS
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_ARG_RESULTS" ADD CONSTRAINT "UT_TEST_IMPL_ARG_RESULTS__FK1" FOREIGN KEY ("UTI_ID")
	  REFERENCES "COLABANCARIA"."UT_TEST_IMPL" ("UTI_ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_ARG_RESULTS" ADD CONSTRAINT "UT_TEST_IMPL_ARG_RESULTS__FK2" FOREIGN KEY ("ARG_ID")
	  REFERENCES "COLABANCARIA"."UT_TEST_ARGUMENTS" ("ARG_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table UT_TEST_IMPL_ARGUMENTS
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_ARGUMENTS" ADD CONSTRAINT "UT_TEST_IMPL_ARGUMENTS_UT_FK1" FOREIGN KEY ("ARG_ID")
	  REFERENCES "COLABANCARIA"."UT_TEST_ARGUMENTS" ("ARG_ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_ARGUMENTS" ADD CONSTRAINT "UT_TEST_IMPL_ARGUMENTS_UT_FK2" FOREIGN KEY ("UTI_ID")
	  REFERENCES "COLABANCARIA"."UT_TEST_IMPL" ("UTI_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table UT_TEST_IMPL_RESULTS
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_RESULTS" ADD CONSTRAINT "UT_TEST_IMPL_RESULTS_UT_T_FK1" FOREIGN KEY ("UTI_ID")
	  REFERENCES "COLABANCARIA"."UT_TEST_IMPL" ("UTI_ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_RESULTS" ADD CONSTRAINT "UT_TEST_IMPL_RESULTS_UT_T_FK2" FOREIGN KEY ("UTR_ID")
	  REFERENCES "COLABANCARIA"."UT_TEST_RESULTS" ("UTR_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table UT_TEST_IMPL_VAL_RESULTS
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_VAL_RESULTS" ADD CONSTRAINT "UT_TEST_IMPL_VAL_RES_FK1" FOREIGN KEY ("VAL_ID")
	  REFERENCES "COLABANCARIA"."UT_VALIDATIONS" ("VALIDATION_ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_VAL_RESULTS" ADD CONSTRAINT "UT_TEST_IMPL_VAL_RES_FK2" FOREIGN KEY ("UTI_ID")
	  REFERENCES "COLABANCARIA"."UT_TEST_IMPL" ("UTI_ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "COLABANCARIA"."UT_TEST_IMPL_VAL_RESULTS" ADD CONSTRAINT "UT_TEST_IMPL_VAL_RES_FK3" FOREIGN KEY ("UTIR_ID")
	  REFERENCES "COLABANCARIA"."UT_TEST_IMPL_RESULTS" ("UTIR_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table UT_TEST_RESULTS
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."UT_TEST_RESULTS" ADD CONSTRAINT "UT_TEST_RESULTS_UT_TEST_FK1" FOREIGN KEY ("UT_ID")
	  REFERENCES "COLABANCARIA"."UT_TEST" ("UT_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table UT_VALIDATIONS
--------------------------------------------------------

  ALTER TABLE "COLABANCARIA"."UT_VALIDATIONS" ADD CONSTRAINT "UT_VALIDATIONS_LIB_VALIDN_FK1" FOREIGN KEY ("LIB_VALIDATION_ID")
	  REFERENCES "COLABANCARIA"."UT_LIB_VALIDATIONS" ("LIB_VALIDATION_ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "COLABANCARIA"."UT_VALIDATIONS" ADD CONSTRAINT "UT_VALIDATIONS_TEST_IMPL_FK1" FOREIGN KEY ("UTI_ID")
	  REFERENCES "COLABANCARIA"."UT_TEST_IMPL" ("UTI_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  DDL for Trigger TBCAJERO_TRIGGER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."TBCAJERO_TRIGGER" 
BEFORE INSERT ON TBCAJERO 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COLABANCARIA"."TBCAJERO_TRIGGER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TBCLIENTE_TRIGGER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."TBCLIENTE_TRIGGER" 
BEFORE INSERT ON TBCLIENTE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING THEN
      SELECT TBCLIENTE_SEQUENCE.NEXTVAL INTO :NEW.ID_CLIENTE FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COLABANCARIA"."TBCLIENTE_TRIGGER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TBTRANSACCION_TRIGGER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."TBTRANSACCION_TRIGGER" 
BEFORE INSERT ON TBTRANSACCION 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING THEN
      SELECT TBTRANSACCION_SEQUENCE.NEXTVAL INTO :NEW.ID_TRANSACCION FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COLABANCARIA"."TBTRANSACCION_TRIGGER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_LIB_DYN_QUERIES
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_LIB_DYN_QUERIES" 
BEFORE INSERT ON UT_LIB_DYN_QUERIES
FOR EACH ROW 
BEGIN
  if (:NEW.LIB_DYN_QUERY_ID is null or :NEW.LIB_DYN_QUERY_ID = '') then
      SELECT  SYS_GUID() INTO :NEW.LIB_DYN_QUERY_ID FROM DUAL;
  end if;
  if (:NEW.CREATED_ON is null or :NEW.CREATED_ON = '') then
      SELECT sysdate INTO :NEW.CREATED_ON FROM DUAL;
  end if;
  if (:NEW.CREATED_BY is null or :NEW.CREATED_BY = '') then
      SELECT user INTO :NEW.CREATED_BY FROM DUAL;
  end if;
  if (:NEW.UPDATED_ON is null or :NEW.UPDATED_ON = '') then
      SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
  end if;
  if (:NEW.UPDATED_BY is null or :NEW.UPDATED_BY = '') then
      SELECT user INTO :NEW.UPDATED_BY FROM DUAL;
  end if;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_LIB_DYN_QUERIES" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_LIB_DYN_QUERIES_UP_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_LIB_DYN_QUERIES_UP_TRG" 
BEFORE UPDATE ON UT_LIB_DYN_QUERIES
FOR EACH ROW 
BEGIN
  if (:NEW.UPDATED_ON is null or :NEW.UPDATED_ON = '') then
      SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
  end if;
  if (:NEW.UPDATED_BY is null or :NEW.UPDATED_BY = '') then
      SELECT user INTO :NEW.UPDATED_BY FROM DUAL;
  end if;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_LIB_DYN_QUERIES_UP_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_LIB_STARTUPS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_LIB_STARTUPS" 
BEFORE INSERT ON UT_LIB_STARTUPS
FOR EACH ROW 
BEGIN
  if (:NEW.LIB_STARTUP_ID is null or :NEW.LIB_STARTUP_ID = '') then
      SELECT  SYS_GUID() INTO :NEW.LIB_STARTUP_ID FROM DUAL;
  end if;
  if (:NEW.CREATED_ON is null or :NEW.CREATED_ON = '') then
      SELECT sysdate INTO :NEW.CREATED_ON FROM DUAL;
  end if;
  if (:NEW.CREATED_BY is null or :NEW.CREATED_BY = '') then
      SELECT user INTO :NEW.CREATED_BY FROM DUAL;
  end if;
  if (:NEW.UPDATED_ON is null or :NEW.UPDATED_ON = '') then
      SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
  end if;
  if (:NEW.UPDATED_BY is null or :NEW.UPDATED_BY = '') then
      SELECT user INTO :NEW.UPDATED_BY FROM DUAL;
  end if;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_LIB_STARTUPS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_LIB_STARTUPS_UP_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_LIB_STARTUPS_UP_TRG" 
BEFORE UPDATE ON UT_LIB_STARTUPS
FOR EACH ROW 
BEGIN
  if (:NEW.UPDATED_ON is null or :NEW.UPDATED_ON = '') then
      SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
  end if;
  if (:NEW.UPDATED_BY is null or :NEW.UPDATED_BY = '') then
      SELECT user INTO :NEW.UPDATED_BY FROM DUAL;
  end if;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_LIB_STARTUPS_UP_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_LIB_TEARDOWNS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_LIB_TEARDOWNS" 
BEFORE INSERT ON UT_LIB_TEARDOWNS
FOR EACH ROW 
BEGIN
  if (:NEW.LIB_TEARDOWN_ID is null or :NEW.LIB_TEARDOWN_ID = '') then
      SELECT  SYS_GUID() INTO :NEW.LIB_TEARDOWN_ID FROM DUAL;
  end if;
  if (:NEW.CREATED_ON is null or :NEW.CREATED_ON = '') then
      SELECT sysdate INTO :NEW.CREATED_ON FROM DUAL;
  end if;
  if (:NEW.CREATED_BY is null or :NEW.CREATED_BY = '') then
      SELECT user INTO :NEW.CREATED_BY FROM DUAL;
  end if;
  if (:NEW.UPDATED_ON is null or :NEW.UPDATED_ON = '') then
      SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
  end if;
  if (:NEW.UPDATED_BY is null or :NEW.UPDATED_BY = '') then
      SELECT user INTO :NEW.UPDATED_BY FROM DUAL;
  end if;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_LIB_TEARDOWNS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_LIB_TEARDOWNS_UP_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_LIB_TEARDOWNS_UP_TRG" 
BEFORE UPDATE ON UT_LIB_TEARDOWNS
FOR EACH ROW 
BEGIN
  if (:NEW.UPDATED_ON is null or :NEW.UPDATED_ON = '') then
      SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
  end if;
  if (:NEW.UPDATED_BY is null or :NEW.UPDATED_BY = '') then
      SELECT user INTO :NEW.UPDATED_BY FROM DUAL;
  end if;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_LIB_TEARDOWNS_UP_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_LIB_VALIDATIONS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_LIB_VALIDATIONS" 
BEFORE INSERT ON UT_LIB_VALIDATIONS
FOR EACH ROW 
BEGIN
  if (:NEW.LIB_VALIDATION_ID is null or :NEW.LIB_VALIDATION_ID = '') then
      SELECT  SYS_GUID() INTO :NEW.LIB_VALIDATION_ID FROM DUAL;
  end if;
  if (:NEW.CREATED_ON is null or :NEW.CREATED_ON = '') then
      SELECT sysdate INTO :NEW.CREATED_ON FROM DUAL;
  end if;
  if (:NEW.CREATED_BY is null or :NEW.CREATED_BY = '') then
      SELECT user INTO :NEW.CREATED_BY FROM DUAL;
  end if;
  if (:NEW.UPDATED_ON is null or :NEW.UPDATED_ON = '') then
      SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
  end if;
  if (:NEW.UPDATED_BY is null or :NEW.UPDATED_BY = '') then
      SELECT user INTO :NEW.UPDATED_BY FROM DUAL;
  end if;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_LIB_VALIDATIONS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_LIB_VALIDATIONS_UP_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_LIB_VALIDATIONS_UP_TRG" 
BEFORE UPDATE ON UT_LIB_VALIDATIONS
FOR EACH ROW 
BEGIN
  if (:NEW.UPDATED_ON is null or :NEW.UPDATED_ON = '') then
      SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
  end if;
  if (:NEW.UPDATED_BY is null or :NEW.UPDATED_BY = '') then
      SELECT user INTO :NEW.UPDATED_BY FROM DUAL;
  end if;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_LIB_VALIDATIONS_UP_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_LOOKUP_CAT_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_LOOKUP_CAT_TRG" 
BEFORE INSERT ON UT_LOOKUP_CATEGORIES
FOR EACH ROW 
BEGIN
  if (:NEW.ID is null or :NEW.ID = '') then
      SELECT  SYS_GUID() INTO :NEW.ID FROM DUAL;
  end if;
  if (:NEW.CREATED_ON is null or :NEW.CREATED_ON = '') then
      SELECT sysdate INTO :NEW.CREATED_ON FROM DUAL;
  end if;
  if (:NEW.CREATED_BY is null or :NEW.CREATED_BY = '') then
      SELECT user INTO :NEW.CREATED_BY FROM DUAL;
  end if;
  if (:NEW.UPDATED_ON is null or :NEW.UPDATED_ON = '') then
      SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
  end if;
  if (:NEW.UPDATED_BY is null or :NEW.UPDATED_BY = '') then
      SELECT user INTO :NEW.UPDATED_BY FROM DUAL;
  end if;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_LOOKUP_CAT_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_LOOKUP_CAT_UP_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_LOOKUP_CAT_UP_TRG" 
BEFORE UPDATE ON UT_LOOKUP_CATEGORIES
FOR EACH ROW 
BEGIN
  if (:NEW.UPDATED_ON is null or :NEW.UPDATED_ON = '') then
      SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
  end if;
  if (:NEW.UPDATED_BY is null or :NEW.UPDATED_BY = '') then
      SELECT user INTO :NEW.UPDATED_BY FROM DUAL;
  end if;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_LOOKUP_CAT_UP_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_LOOKUP_DATA_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_LOOKUP_DATA_TRG" 
BEFORE INSERT ON UT_LOOKUP_DATATYPES
FOR EACH ROW 
BEGIN
  if (:NEW.ID is null or :NEW.ID = '') then
      SELECT  SYS_GUID() INTO :NEW.ID FROM DUAL;
  end if;
  if (:NEW.CREATED_ON is null or :NEW.CREATED_ON = '') then
      SELECT sysdate INTO :NEW.CREATED_ON FROM DUAL;
  end if;
  if (:NEW.CREATED_BY is null or :NEW.CREATED_BY = '') then
      SELECT user INTO :NEW.CREATED_BY FROM DUAL;
  end if;
  if (:NEW.UPDATED_ON is null or :NEW.UPDATED_ON = '') then
      SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
  end if;
  if (:NEW.UPDATED_BY is null or :NEW.UPDATED_BY = '') then
      SELECT user INTO :NEW.UPDATED_BY FROM DUAL;
  end if;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_LOOKUP_DATA_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_LOOKUP_DATATYPES_UP_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_LOOKUP_DATATYPES_UP_TRG" 
BEFORE UPDATE ON UT_LOOKUP_DATATYPES
FOR EACH ROW 
BEGIN
  if (:NEW.UPDATED_ON is null or :NEW.UPDATED_ON = '') then
      SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
  end if;
  if (:NEW.UPDATED_BY is null or :NEW.UPDATED_BY = '') then
      SELECT user INTO :NEW.UPDATED_BY FROM DUAL;
  end if;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_LOOKUP_DATATYPES_UP_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_LOOKUP_VALUES_UP_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_LOOKUP_VALUES_UP_TRG" 
BEFORE UPDATE ON UT_LOOKUP_VALUES
FOR EACH ROW 
BEGIN
  if (:NEW.UPDATED_ON is null or :NEW.UPDATED_ON = '') then
      SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
  end if;
  if (:NEW.UPDATED_BY is null or :NEW.UPDATED_BY = '') then
      SELECT user INTO :NEW.UPDATED_BY FROM DUAL;
  end if;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_LOOKUP_VALUES_UP_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_LOOKUP_VALUE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_LOOKUP_VALUE_TRG" 
BEFORE INSERT ON UT_LOOKUP_VALUES
FOR EACH ROW 
BEGIN
  if (:NEW.ID is null or :NEW.ID = '') then
      SELECT  SYS_GUID() INTO :NEW.ID FROM DUAL;
  end if;
  if (:NEW.CREATED_ON is null or :NEW.CREATED_ON = '') then
      SELECT sysdate INTO :NEW.CREATED_ON FROM DUAL;
  end if;
  if (:NEW.CREATED_BY is null or :NEW.CREATED_BY = '') then
      SELECT user INTO :NEW.CREATED_BY FROM DUAL;
  end if;
  if (:NEW.UPDATED_ON is null or :NEW.UPDATED_ON = '') then
      SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
  end if;
  if (:NEW.UPDATED_BY is null or :NEW.UPDATED_BY = '') then
      SELECT user INTO :NEW.UPDATED_BY FROM DUAL;
  end if;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_LOOKUP_VALUE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_STARTUPS_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_STARTUPS_TRG" BEFORE
  INSERT ON UT_STARTUPS FOR EACH ROW 
  DECLARE
   BAD_DATA EXCEPTION;
   PRAGMA EXCEPTION_INIT(BAD_DATA, -20201);
  BEGIN 
IF (:NEW.UT_ID IS NULL AND :NEW.UT_SID IS NULL ) THEN
    RAISE_APPLICATION_ERROR(-20201, 'Invalid Insert');
END IF;
IF (:NEW.UT_ID IS NOT NULL AND :NEW.UT_SID IS NOT NULL ) THEN
    RAISE_APPLICATION_ERROR(-20201, 'Invalid Insert');
END IF;
IF (:NEW.STARTUP_ID IS NULL OR :NEW.STARTUP_ID = '' ) THEN
  SELECT SYS_GUID() INTO :NEW.STARTUP_ID FROM DUAL;
END IF;
IF (:NEW.CREATED_ON IS NULL OR :NEW.CREATED_ON = '') THEN
  SELECT sysdate INTO :NEW.CREATED_ON FROM DUAL;
END IF;
IF (:NEW.CREATED_BY IS NULL OR :NEW.CREATED_BY = '') THEN
  SELECT USER INTO :NEW.CREATED_BY FROM DUAL;
END IF;
IF (:NEW.UPDATED_ON IS NULL OR :NEW.UPDATED_ON = '') THEN
  SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
END IF;
IF (:NEW.UPDATED_BY IS NULL OR :NEW.UPDATED_BY = '') THEN
  SELECT USER INTO :NEW.UPDATED_BY FROM DUAL;
END IF;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_STARTUPS_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_STARTUPS_UP_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_STARTUPS_UP_TRG" BEFORE
  UPDATE ON UT_STARTUPS FOR EACH ROW BEGIN IF (:NEW.UPDATED_ON IS NULL
  OR :NEW.UPDATED_ON = '') THEN
  SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
END IF;
IF (:NEW.UPDATED_BY IS NULL OR :NEW.UPDATED_BY = '') THEN
  SELECT USER INTO :NEW.UPDATED_BY FROM DUAL;
END IF;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_STARTUPS_UP_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_SUITE_ITEM_RESULTS_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_SUITE_ITEM_RESULTS_TRG" 
BEFORE INSERT ON UT_SUITE_ITEM_RESULTS
FOR EACH ROW 
BEGIN
  if (:NEW.CREATED_ON is null or :NEW.CREATED_ON = '') then
      SELECT sysdate INTO :NEW.CREATED_ON FROM DUAL;
  end if;
  if (:NEW.CREATED_BY is null or :NEW.CREATED_BY = '') then
      SELECT user INTO :NEW.CREATED_BY FROM DUAL;
  end if;
  if (:NEW.UPDATED_ON is null or :NEW.UPDATED_ON = '') then
      SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
  end if;
  if (:NEW.UPDATED_BY is null or :NEW.UPDATED_BY = '') then
      SELECT user INTO :NEW.UPDATED_BY FROM DUAL;
  end if;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_SUITE_ITEM_RESULTS_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_SUITE_ITEM_RESULTS_UP_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_SUITE_ITEM_RESULTS_UP_TRG" 
BEFORE UPDATE ON UT_SUITE_ITEM_RESULTS
FOR EACH ROW 
BEGIN
  if (:NEW.UPDATED_ON is null or :NEW.UPDATED_ON = '') then
      SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
  end if;
  if (:NEW.UPDATED_BY is null or :NEW.UPDATED_BY = '') then
      SELECT user INTO :NEW.UPDATED_BY FROM DUAL;
  end if;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_SUITE_ITEM_RESULTS_UP_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_SUITE_ITEMS_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_SUITE_ITEMS_TRG" 
BEFORE INSERT ON UT_SUITE_ITEMS
FOR EACH ROW 
BEGIN
  if (:NEW.CREATED_ON is null or :NEW.CREATED_ON = '') then
      SELECT sysdate INTO :NEW.CREATED_ON FROM DUAL;
  end if;
  if (:NEW.CREATED_BY is null or :NEW.CREATED_BY = '') then
      SELECT user INTO :NEW.CREATED_BY FROM DUAL;
  end if;
  if (:NEW.UPDATED_ON is null or :NEW.UPDATED_ON = '') then
      SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
  end if;
  if (:NEW.UPDATED_BY is null or :NEW.UPDATED_BY = '') then
      SELECT user INTO :NEW.UPDATED_BY FROM DUAL;
  end if;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_SUITE_ITEMS_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_SUITE_ITEMS_UP_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_SUITE_ITEMS_UP_TRG" 
BEFORE UPDATE ON UT_SUITE_ITEMS
FOR EACH ROW 
BEGIN
  if (:NEW.UPDATED_ON is null or :NEW.UPDATED_ON = '') then
      SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
  end if;
  if (:NEW.UPDATED_BY is null or :NEW.UPDATED_BY = '') then
      SELECT user INTO :NEW.UPDATED_BY FROM DUAL;
  end if;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_SUITE_ITEMS_UP_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_SUITE_RESULTS_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_SUITE_RESULTS_TRG" 
BEFORE INSERT ON UT_SUITE_RESULTS
FOR EACH ROW 
BEGIN
  if (:NEW.UTSR_ID is null or :NEW.UTSR_ID = '') then 
      SELECT  SYS_GUID() INTO :NEW.UTSR_ID FROM DUAL;
  end if;
  if (:NEW.RUN_DATE is null or :NEW.RUN_DATE = '') then 
      SELECT Current_Timestamp INTO :NEW.RUN_DATE FROM DUAL;
  end if;
  if (:NEW.STATUS is null or :NEW.STATUS = '') then 
      :NEW.STATUS := 'RUNNING';
  end if;
  if (:NEW.CREATED_ON is null or :NEW.CREATED_ON = '') then
      SELECT sysdate INTO :NEW.CREATED_ON FROM DUAL;
  end if;
  if (:NEW.CREATED_BY is null or :NEW.CREATED_BY = '') then
      SELECT user INTO :NEW.CREATED_BY FROM DUAL;
  end if;
  if (:NEW.UPDATED_ON is null or :NEW.UPDATED_ON = '') then
      SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
  end if;
  if (:NEW.UPDATED_BY is null or :NEW.UPDATED_BY = '') then
      SELECT user INTO :NEW.UPDATED_BY FROM DUAL;
  end if;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_SUITE_RESULTS_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_SUITE_RESULTS_UP_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_SUITE_RESULTS_UP_TRG" 
BEFORE UPDATE ON UT_SUITE_RESULTS
FOR EACH ROW 
BEGIN
  if (:NEW.UPDATED_ON is null or :NEW.UPDATED_ON = '') then
      SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
  end if;
  if (:NEW.UPDATED_BY is null or :NEW.UPDATED_BY = '') then
      SELECT user INTO :NEW.UPDATED_BY FROM DUAL;
  end if;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_SUITE_RESULTS_UP_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_SUITE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_SUITE_TRG" 
BEFORE INSERT ON UT_SUITE
FOR EACH ROW 
BEGIN
  if (:NEW.UT_SID is null or :NEW.UT_SID = '') then 
      SELECT  SYS_GUID() INTO :NEW.UT_SID FROM DUAL;
  end if;
  if (:NEW.CREATED_ON is null or :NEW.CREATED_ON = '') then
      SELECT sysdate INTO :NEW.CREATED_ON FROM DUAL;
  end if;
  if (:NEW.CREATED_BY is null or :NEW.CREATED_BY = '') then
      SELECT user INTO :NEW.CREATED_BY FROM DUAL;
  end if;
  if (:NEW.UPDATED_ON is null or :NEW.UPDATED_ON = '') then
      SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
  end if;
  if (:NEW.UPDATED_BY is null or :NEW.UPDATED_BY = '') then
      SELECT user INTO :NEW.UPDATED_BY FROM DUAL;
  end if;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_SUITE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_SUITE_UP_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_SUITE_UP_TRG" 
BEFORE UPDATE ON UT_SUITE
FOR EACH ROW 
BEGIN
  if (:NEW.UPDATED_ON is null or :NEW.UPDATED_ON = '') then
      SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
  end if;
  if (:NEW.UPDATED_BY is null or :NEW.UPDATED_BY = '') then
      SELECT user INTO :NEW.UPDATED_BY FROM DUAL;
  end if;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_SUITE_UP_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_TEARDOWNS_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_TEARDOWNS_TRG" BEFORE
INSERT ON UT_TEARDOWNS FOR EACH ROW 
DECLARE
 BAD_DATA EXCEPTION;
 PRAGMA EXCEPTION_INIT(BAD_DATA, -20201);
BEGIN 
IF (:NEW.UT_ID IS NULL AND :NEW.UT_SID IS NULL ) THEN
    RAISE_APPLICATION_ERROR(-20201, 'Invalid Insert');
END IF;
IF (:NEW.UT_ID IS NOT NULL AND :NEW.UT_SID IS NOT NULL ) THEN
    RAISE_APPLICATION_ERROR(-20201, 'Invalid Insert');
END IF;
IF (:NEW.TEARDOWN_ID IS NULL OR :NEW.TEARDOWN_ID = '') THEN
  SELECT SYS_GUID() INTO :NEW.TEARDOWN_ID FROM DUAL;
END IF;
IF (:NEW.CREATED_ON IS NULL OR :NEW.CREATED_ON = '') THEN
  SELECT sysdate INTO :NEW.CREATED_ON FROM DUAL;
END IF;
IF (:NEW.CREATED_BY IS NULL OR :NEW.CREATED_BY = '') THEN
  SELECT USER INTO :NEW.CREATED_BY FROM DUAL;
END IF;
IF (:NEW.UPDATED_ON IS NULL OR :NEW.UPDATED_ON = '') THEN
  SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
END IF;
IF (:NEW.UPDATED_BY IS NULL OR :NEW.UPDATED_BY = '') THEN
  SELECT USER INTO :NEW.UPDATED_BY FROM DUAL;
END IF;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_TEARDOWNS_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_TEARDOWNS_UP_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_TEARDOWNS_UP_TRG" BEFORE
  UPDATE ON UT_TEARDOWNS FOR EACH ROW 
BEGIN 
IF (:NEW.UPDATED_ON IS NULL
  OR :NEW.UPDATED_ON = '') THEN
  SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
END IF;
IF (:NEW.UPDATED_BY IS NULL OR :NEW.UPDATED_BY = '') THEN
  SELECT USER INTO :NEW.UPDATED_BY FROM DUAL;
END IF;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_TEARDOWNS_UP_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_TEST_ARGUMENTS_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_TEST_ARGUMENTS_TRG" 
BEFORE INSERT ON UT_TEST_ARGUMENTS
FOR EACH ROW 
BEGIN
  if (:NEW.CREATED_ON is null or :NEW.CREATED_ON = '') then
      SELECT sysdate INTO :NEW.CREATED_ON FROM DUAL;
  end if;
  if (:NEW.CREATED_BY is null or :NEW.CREATED_BY = '') then
      SELECT user INTO :NEW.CREATED_BY FROM DUAL;
  end if;
  if (:NEW.UPDATED_ON is null or :NEW.UPDATED_ON = '') then
      SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
  end if;
  if (:NEW.UPDATED_BY is null or :NEW.UPDATED_BY = '') then
      SELECT user INTO :NEW.UPDATED_BY FROM DUAL;
  end if;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_TEST_ARGUMENTS_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_TEST_ARGUMENTS_UP_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_TEST_ARGUMENTS_UP_TRG" 
BEFORE UPDATE ON UT_TEST_ARGUMENTS
FOR EACH ROW 
BEGIN
  if (:NEW.UPDATED_ON is null or :NEW.UPDATED_ON = '') then
      SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
  end if;
  if (:NEW.UPDATED_BY is null or :NEW.UPDATED_BY = '') then
      SELECT user INTO :NEW.UPDATED_BY FROM DUAL;
  end if;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_TEST_ARGUMENTS_UP_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_TEST_COVERAGE_STATS_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_TEST_COVERAGE_STATS_TRG" 
BEFORE INSERT ON UT_TEST_COVERAGE_STATS
FOR EACH ROW 
BEGIN
  if (:NEW.UTC_ID is null or :NEW.UTC_ID = '') then 
      SELECT  SYS_GUID() INTO :NEW.UTC_ID FROM DUAL;
  end if;
  if (:NEW.CREATED_ON is null or :NEW.CREATED_ON = '') then
      SELECT sysdate INTO :NEW.CREATED_ON FROM DUAL;
  end if;
  if (:NEW.CREATED_BY is null or :NEW.CREATED_BY = '') then
      SELECT user INTO :NEW.CREATED_BY FROM DUAL;
  end if;
  if (:NEW.UPDATED_ON is null or :NEW.UPDATED_ON = '') then
      SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
  end if;
  if (:NEW.UPDATED_BY is null or :NEW.UPDATED_BY = '') then
      SELECT user INTO :NEW.UPDATED_BY FROM DUAL;
  end if;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_TEST_COVERAGE_STATS_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_TEST_COVERAGE_STATS_UP_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_TEST_COVERAGE_STATS_UP_TRG" 
BEFORE UPDATE ON UT_TEST_COVERAGE_STATS
FOR EACH ROW 
BEGIN
  if (:NEW.UPDATED_ON is null or :NEW.UPDATED_ON = '') then
      SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
  end if;
  if (:NEW.UPDATED_BY is null or :NEW.UPDATED_BY = '') then
      SELECT user INTO :NEW.UPDATED_BY FROM DUAL;
  end if;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_TEST_COVERAGE_STATS_UP_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_TEST_IMPL_ARG_RESULTS_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_TEST_IMPL_ARG_RESULTS_TRG" 
BEFORE INSERT ON UT_TEST_IMPL_ARG_RESULTS
FOR EACH ROW 
BEGIN
  if (:NEW.UTIAR_ID is null or :NEW.UTIAR_ID = '') then 
      SELECT  SYS_GUID() INTO :NEW.UTIAR_ID FROM DUAL;
  end if;
  if (:NEW.RUN_DATE is null or :NEW.RUN_DATE = '') then 
      SELECT Current_Timestamp INTO :NEW.RUN_DATE FROM DUAL;
  end if;
  if (:NEW.STATUS is null or :NEW.STATUS = '') then 
      :NEW.STATUS := 'RUNNING';
  end if;
  if (:NEW.CREATED_ON is null or :NEW.CREATED_ON = '') then
      SELECT sysdate INTO :NEW.CREATED_ON FROM DUAL;
  end if;
  if (:NEW.CREATED_BY is null or :NEW.CREATED_BY = '') then
      SELECT user INTO :NEW.CREATED_BY FROM DUAL;
  end if;
  if (:NEW.UPDATED_ON is null or :NEW.UPDATED_ON = '') then
      SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
  end if;
  if (:NEW.UPDATED_BY is null or :NEW.UPDATED_BY = '') then
      SELECT user INTO :NEW.UPDATED_BY FROM DUAL;
  end if;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_TEST_IMPL_ARG_RESULTS_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_TEST_IMPL_ARG_RES_UP_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_TEST_IMPL_ARG_RES_UP_TRG" 
BEFORE UPDATE ON UT_TEST_IMPL_ARG_RESULTS
FOR EACH ROW 
BEGIN
  if (:NEW.UPDATED_ON is null or :NEW.UPDATED_ON = '') then
      SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
  end if;
  if (:NEW.UPDATED_BY is null or :NEW.UPDATED_BY = '') then
      SELECT user INTO :NEW.UPDATED_BY FROM DUAL;
  end if;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_TEST_IMPL_ARG_RES_UP_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_TEST_IMPL_ARGUMENTS_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_TEST_IMPL_ARGUMENTS_TRG" 
BEFORE INSERT ON UT_TEST_IMPL_ARGUMENTS
FOR EACH ROW 
BEGIN
  if (:NEW.CREATED_ON is null or :NEW.CREATED_ON = '') then
      SELECT sysdate INTO :NEW.CREATED_ON FROM DUAL;
  end if;
  if (:NEW.CREATED_BY is null or :NEW.CREATED_BY = '') then
      SELECT user INTO :NEW.CREATED_BY FROM DUAL;
  end if;
  if (:NEW.UPDATED_ON is null or :NEW.UPDATED_ON = '') then
      SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
  end if;
  if (:NEW.UPDATED_BY is null or :NEW.UPDATED_BY = '') then
      SELECT user INTO :NEW.UPDATED_BY FROM DUAL;
  end if;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_TEST_IMPL_ARGUMENTS_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_TEST_IMPL_ARGUMENTS_UP_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_TEST_IMPL_ARGUMENTS_UP_TRG" 
BEFORE UPDATE ON UT_TEST_IMPL_ARGUMENTS
FOR EACH ROW 
BEGIN
  if (:NEW.UPDATED_ON is null or :NEW.UPDATED_ON = '') then
      SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
  end if;
  if (:NEW.UPDATED_BY is null or :NEW.UPDATED_BY = '') then
      SELECT user INTO :NEW.UPDATED_BY FROM DUAL;
  end if;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_TEST_IMPL_ARGUMENTS_UP_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_TEST_IMPL_RESULTS_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_TEST_IMPL_RESULTS_TRG" 
BEFORE INSERT ON UT_TEST_IMPL_RESULTS
FOR EACH ROW 
BEGIN
  if (:NEW.UTIR_ID is null or :NEW.UTIR_ID = '') then 
      SELECT  SYS_GUID() INTO :NEW.UTIR_ID FROM DUAL;
  end if;
  if (:NEW.RUN_DATE is null or :NEW.RUN_DATE = '') then 
      SELECT Current_Timestamp INTO :NEW.RUN_DATE FROM DUAL;
  end if;
  if (:NEW.STATUS is null or :NEW.STATUS = '') then 
      :NEW.STATUS := 'RUNNING';
  end if;
  if (:NEW.CREATED_ON is null or :NEW.CREATED_ON = '') then
      SELECT sysdate INTO :NEW.CREATED_ON FROM DUAL;
  end if;
  if (:NEW.CREATED_BY is null or :NEW.CREATED_BY = '') then
      SELECT user INTO :NEW.CREATED_BY FROM DUAL;
  end if;
  if (:NEW.UPDATED_ON is null or :NEW.UPDATED_ON = '') then
      SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
  end if;
  if (:NEW.UPDATED_BY is null or :NEW.UPDATED_BY = '') then
      SELECT user INTO :NEW.UPDATED_BY FROM DUAL;
  end if;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_TEST_IMPL_RESULTS_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_TEST_IMPL_RESULTS_UP_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_TEST_IMPL_RESULTS_UP_TRG" 
BEFORE UPDATE ON UT_TEST_IMPL_RESULTS
FOR EACH ROW 
BEGIN
  if (:NEW.UPDATED_ON is null or :NEW.UPDATED_ON = '') then
      SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
  end if;
  if (:NEW.UPDATED_BY is null or :NEW.UPDATED_BY = '') then
      SELECT user INTO :NEW.UPDATED_BY FROM DUAL;
  end if;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_TEST_IMPL_RESULTS_UP_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_TEST_IMPL_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_TEST_IMPL_TRG" 
BEFORE INSERT ON UT_TEST_IMPL
FOR EACH ROW 
BEGIN
  if (:NEW.UTI_ID is null or :NEW.UTI_ID = '') then
      SELECT  SYS_GUID() INTO :NEW.UTI_ID FROM DUAL;
  end if;
  if (:NEW.CREATED_ON is null or :NEW.CREATED_ON = '') then
      SELECT sysdate INTO :NEW.CREATED_ON FROM DUAL;
  end if;
  if (:NEW.CREATED_BY is null or :NEW.CREATED_BY = '') then
      SELECT user INTO :NEW.CREATED_BY FROM DUAL;
  end if;
  if (:NEW.UPDATED_ON is null or :NEW.UPDATED_ON = '') then
      SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
  end if;
  if (:NEW.UPDATED_BY is null or :NEW.UPDATED_BY = '') then
      SELECT user INTO :NEW.UPDATED_BY FROM DUAL;
  end if;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_TEST_IMPL_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_TEST_IMPL_UP_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_TEST_IMPL_UP_TRG" 
BEFORE UPDATE ON UT_TEST_IMPL
FOR EACH ROW 
BEGIN
  if (:NEW.UPDATED_ON is null or :NEW.UPDATED_ON = '') then
      SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
  end if;
  if (:NEW.UPDATED_BY is null or :NEW.UPDATED_BY = '') then
      SELECT user INTO :NEW.UPDATED_BY FROM DUAL;
  end if;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_TEST_IMPL_UP_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_TEST_IMPL_VAL_RESULTS_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_TEST_IMPL_VAL_RESULTS_TRG" 
BEFORE INSERT ON UT_TEST_IMPL_VAL_RESULTS
FOR EACH ROW 
BEGIN
  if (:NEW.UTIVR_ID is null or :NEW.UTIVR_ID = '') then 
      SELECT  SYS_GUID() INTO :NEW.UTIVR_ID FROM DUAL;
  end if;
  if (:NEW.STATUS is null or :NEW.STATUS = '') then 
      :NEW.STATUS := 'RUNNING';
  end if;
  if (:NEW.CREATED_ON is null or :NEW.CREATED_ON = '') then
      SELECT sysdate INTO :NEW.CREATED_ON FROM DUAL;
  end if;
  if (:NEW.CREATED_BY is null or :NEW.CREATED_BY = '') then
      SELECT user INTO :NEW.CREATED_BY FROM DUAL;
  end if;
  if (:NEW.UPDATED_ON is null or :NEW.UPDATED_ON = '') then
      SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
  end if;
  if (:NEW.UPDATED_BY is null or :NEW.UPDATED_BY = '') then
      SELECT user INTO :NEW.UPDATED_BY FROM DUAL;
  end if;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_TEST_IMPL_VAL_RESULTS_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_TEST_IMPL_VAL_RES_UP_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_TEST_IMPL_VAL_RES_UP_TRG" 
BEFORE UPDATE ON UT_TEST_IMPL_VAL_RESULTS
FOR EACH ROW 
BEGIN
  if (:NEW.UPDATED_ON is null or :NEW.UPDATED_ON = '') then
      SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
  end if;
  if (:NEW.UPDATED_BY is null or :NEW.UPDATED_BY = '') then
      SELECT user INTO :NEW.UPDATED_BY FROM DUAL;
  end if;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_TEST_IMPL_VAL_RES_UP_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_TEST_RESULTS_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_TEST_RESULTS_TRG" 
BEFORE INSERT ON UT_TEST_RESULTS
FOR EACH ROW 
BEGIN
  if (:NEW.UTR_ID is null or :NEW.UTR_ID = '') then 
      SELECT  SYS_GUID() INTO :NEW.UTR_ID FROM DUAL;
  end if;
  if (:NEW.RUN_DATE is null or :NEW.RUN_DATE = '') then 
      SELECT Current_Timestamp INTO :NEW.RUN_DATE FROM DUAL;
  end if;
  if (:NEW.STATUS is null or :NEW.STATUS = '') then 
      :NEW.STATUS := 'RUNNING';
  end if;
  if (:NEW.CREATED_ON is null or :NEW.CREATED_ON = '') then
      SELECT sysdate INTO :NEW.CREATED_ON FROM DUAL;
  end if;
  if (:NEW.CREATED_BY is null or :NEW.CREATED_BY = '') then
      SELECT user INTO :NEW.CREATED_BY FROM DUAL;
  end if;
  if (:NEW.UPDATED_ON is null or :NEW.UPDATED_ON = '') then
      SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
  end if;
  if (:NEW.UPDATED_BY is null or :NEW.UPDATED_BY = '') then
      SELECT user INTO :NEW.UPDATED_BY FROM DUAL;
  end if;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_TEST_RESULTS_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_TEST_RESULTS_UP_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_TEST_RESULTS_UP_TRG" 
BEFORE UPDATE ON UT_TEST_RESULTS
FOR EACH ROW 
BEGIN
  if (:NEW.UPDATED_ON is null or :NEW.UPDATED_ON = '') then
      SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
  end if;
  if (:NEW.UPDATED_BY is null or :NEW.UPDATED_BY = '') then
      SELECT user INTO :NEW.UPDATED_BY FROM DUAL;
  end if;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_TEST_RESULTS_UP_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_TEST_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_TEST_TRG" 
BEFORE INSERT ON UT_TEST
FOR EACH ROW 
BEGIN
  if (:NEW.UT_ID is null or :NEW.UT_ID = '') then 
      SELECT  SYS_GUID() INTO :NEW.UT_ID FROM DUAL;
  end if;
  if (:NEW.CREATED_ON is null or :NEW.CREATED_ON = '') then
      SELECT sysdate INTO :NEW.CREATED_ON FROM DUAL;
  end if;
  if (:NEW.CREATED_BY is null or :NEW.CREATED_BY = '') then
      SELECT user INTO :NEW.CREATED_BY FROM DUAL;
  end if;
  if (:NEW.UPDATED_ON is null or :NEW.UPDATED_ON = '') then
      SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
  end if;
  if (:NEW.UPDATED_BY is null or :NEW.UPDATED_BY = '') then
      SELECT user INTO :NEW.UPDATED_BY FROM DUAL;
  end if;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_TEST_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_TEST_UP_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_TEST_UP_TRG" 
BEFORE UPDATE ON UT_TEST
FOR EACH ROW 
BEGIN
  if (:NEW.UPDATED_ON is null or :NEW.UPDATED_ON = '') then
      SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
  end if;
  if (:NEW.UPDATED_BY is null or :NEW.UPDATED_BY = '') then
      SELECT user INTO :NEW.UPDATED_BY FROM DUAL;
  end if;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_TEST_UP_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_VALIDATIONS_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_VALIDATIONS_TRG" 
BEFORE INSERT ON UT_VALIDATIONS
FOR EACH ROW 
BEGIN
  if (:NEW.VALIDATION_ID is null or :NEW.VALIDATION_ID = '') then
      SELECT  SYS_GUID() INTO :NEW.VALIDATION_ID FROM DUAL;
  end if;
  if (:NEW.CREATED_ON is null or :NEW.CREATED_ON = '') then
      SELECT sysdate INTO :NEW.CREATED_ON FROM DUAL;
  end if;
  if (:NEW.CREATED_BY is null or :NEW.CREATED_BY = '') then
      SELECT user INTO :NEW.CREATED_BY FROM DUAL;
  end if;
  if (:NEW.UPDATED_ON is null or :NEW.UPDATED_ON = '') then
      SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
  end if;
  if (:NEW.UPDATED_BY is null or :NEW.UPDATED_BY = '') then
      SELECT user INTO :NEW.UPDATED_BY FROM DUAL;
  end if;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_VALIDATIONS_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UT_VALIDATIONS_UP_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COLABANCARIA"."UT_VALIDATIONS_UP_TRG" 
BEFORE UPDATE ON UT_VALIDATIONS
FOR EACH ROW 
BEGIN
  if (:NEW.UPDATED_ON is null or :NEW.UPDATED_ON = '') then
      SELECT sysdate INTO :NEW.UPDATED_ON FROM DUAL;
  end if;
  if (:NEW.UPDATED_BY is null or :NEW.UPDATED_BY = '') then
      SELECT user INTO :NEW.UPDATED_BY FROM DUAL;
  end if;
END;
/
ALTER TRIGGER "COLABANCARIA"."UT_VALIDATIONS_UP_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Function ATENDIENDO_CLIENTE
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "COLABANCARIA"."ATENDIENDO_CLIENTE" 
(
  PID_FILA_CLIENTE IN NUMBER 
) RETURN varchar2
IS 
mensaje varchar2(100);
BEGIN

UPDATE TBFILACLIENTE SET ESTADO = 'ATENDIENDO'
WHERE ID_FILA_CLIENTE = PID_FILA_CLIENTE;
mensaje:= 'Se atendio al cliente con número de id '|| PID_FILA_CLIENTE;
return mensaje;
END ATENDIENDO_CLIENTE;

/
--------------------------------------------------------
--  DDL for Function VALIDAR_CLIENTE
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "COLABANCARIA"."VALIDAR_CLIENTE" 
(
  PCEDULA IN NVARCHAR2 
) RETURN BOOLEAN
IS
resultado NUMBER;
BEGIN
  SELECT count(*) into resultado FROM TBCLIENTE
  WHERE CEDULA_CLIENTE = PCEDULA;
  
  RETURN (resultado>0);
END VALIDAR_CLIENTE;

/
--------------------------------------------------------
--  DDL for Package UT_UTIL
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE "COLABANCARIA"."UT_UTIL" AS
  PROCEDURE COPY_TEST(OLD_UT_ID IN VARCHAR2, NEW_NAME VARCHAR2);
END "UT_UTIL";

/
--------------------------------------------------------
--  DDL for Package Body UT_UTIL
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "COLABANCARIA"."UT_UTIL" AS
  PROCEDURE COPY_TEST(OLD_UT_ID IN VARCHAR2, NEW_NAME VARCHAR2) AS
    TYPE mapTyp IS TABLE OF VARCHAR2(40) INDEX BY VARCHAR2(40);
    arg_map mapTyp;
    ut_map mapTyp;
    impl_map mapTyp;
  BEGIN
    for c in (select ut_id from ut_test where ut_id = old_ut_id) loop
      select sys_guid() into ut_map(c.ut_id) from dual;
    end loop;
    for c in (select arg_id from ut_test_arguments where ut_id = old_ut_id) loop
      select sys_guid() into arg_map(c.arg_id) from dual;
    end loop;
    for c in (select uti_id from ut_test_impl where ut_id = old_ut_id) loop
      select sys_guid() into impl_map(c.uti_id) from dual;
    end loop;
    insert into ut_test (SELECT ut_map(old_ut_id),  new_NAME,  OBJECT_NAME,  OBJECT_TYPE,  OBJECT_OWNER,  OBJECT_CALL,  CONNECTION_NAME, COVERAGE, null,  null,null,null FROM UT_TEST where ut_id = old_ut_id);
    for c in (SELECT ARG_ID,  ut_map(old_ut_id) ut_id,  OWNER,  OBJECT_NAME,  PACKAGE_NAME,  OBJECT_ID,  OVERLOAD,  ARGUMENT_NAME,  POSITION,  SEQUENCE,  DATA_LEVEL,  DATA_TYPE,
                                   DEFAULT_LENGTH,  IN_OUT,  DATA_LENGTH,  DATA_PRECISION,  DATA_SCALE,  RADIX,  CHARACTER_SET_NAME,  TYPE_OWNER,  TYPE_NAME,  TYPE_SUBNAME,  TYPE_LINK,
                                   PLS_TYPE,  CHAR_LENGTH,  CHAR_USED FROM UT_TEST_ARGUMENTS where ut_id = OLD_UT_ID) loop
             insert into ut_test_arguments values (arg_map(c.ARG_ID),  c.ut_id,  c.OWNER,  c.OBJECT_NAME,  c.PACKAGE_NAME,  c.OBJECT_ID,  c.OVERLOAD,  c.ARGUMENT_NAME,  c.POSITION,  c.SEQUENCE,  c.DATA_LEVEL,  c.DATA_TYPE,
             c.DEFAULT_LENGTH,  c.IN_OUT,  c.DATA_LENGTH,  c.DATA_PRECISION,  c.DATA_SCALE,  c.RADIX,  c.CHARACTER_SET_NAME,  c.TYPE_OWNER,  c.TYPE_NAME,  c.TYPE_SUBNAME,  c.TYPE_LINK,
             c.PLS_TYPE,  c.CHAR_LENGTH,  c.CHAR_USED,null,null,null,null);
    end loop;
    for s in (SELECT index_no, startup, lib_startup_id FROM ut_startups WHERE ut_id = old_ut_id) loop
        insert into ut_startups (ut_id, index_no, startup, lib_startup_id) values (ut_map(old_ut_id), s.index_no, s.startup, s.lib_startup_id);
    end loop;
    for t in (SELECT index_no, teardown, lib_teardown_id FROM ut_teardowns WHERE ut_id = old_ut_id) loop
        insert into ut_teardowns (ut_id, index_no, teardown, lib_teardown_id) values (ut_map(old_ut_id), t.index_no, t.teardown, t.lib_teardown_id);
    end loop;
    for c in (SELECT UTI_ID,  ut_map(old_ut_id) ut_id,  NAME,  EXPECTED_RETURN,  EXPECTED_RETURN_ERROR,  DYNAMIC_VALUE_QUERY, LIB_DYN_QUERY_ID, null CREATED_ON,  null CREATED_BY FROM UT_TEST_IMPL where ut_id = OLD_UT_ID) loop
      insert into UT_TEST_IMPL values (impl_map(c.UTI_ID), c.ut_id,  c.NAME,  c.EXPECTED_RETURN,  c.EXPECTED_RETURN_ERROR,  c.DYNAMIC_VALUE_QUERY, c.LIB_DYN_QUERY_ID, null,null,null,null);
      for x in (select UTI_ID, ARG_ID, INPUT_VALUE, OUTPUT_VALUE, TEST_OUTVAL FROM UT_TEST_IMPL_ARGUMENTS where uti_id = c.uti_id) loop
        insert into ut_test_impl_arguments (UTI_ID, ARG_ID, INPUT_VALUE, OUTPUT_VALUE, TEST_OUTVAL) values (impl_map(x.UTI_ID), arg_map(x.ARG_ID), x.INPUT_VALUE, x.OUTPUT_VALUE, x.TEST_OUTVAL);
      end loop;
      for x in (select UTI_ID, INDEX_NO, VALIDATION, LIB_VALIDATION_ID, APPLY_VALIDATION FROM UT_VALIDATIONS where uti_id = c.uti_id) loop
        insert into ut_validations (UTI_ID, INDEX_NO, VALIDATION, LIB_VALIDATION_ID, APPLY_VALIDATION) values (impl_map(x.UTI_ID), x.INDEX_NO, x.VALIDATION, x.LIB_VALIDATION_ID, x.APPLY_VALIDATION);
      end loop;
    end loop;
  END COPY_TEST;
END "UT_UTIL";

/
--------------------------------------------------------
--  DDL for Procedure ALMUERZO_CAFE_OTROS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "COLABANCARIA"."ALMUERZO_CAFE_OTROS" 
(
  PID_CAJERO IN NUMBER 
) AS 
BEGIN
UPDATE TBCAJERO SET ESTADO_CAJERO = 'NO DISPONIBLE'
WHERE ID_CAJERO = PID_CAJERO;

END ALMUERZO_CAFE_OTROS;

/
--------------------------------------------------------
--  DDL for Procedure INSERT_TBCAJERO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "COLABANCARIA"."INSERT_TBCAJERO" 
(
  PCEDULA IN VARCHAR2 
, PNOMBRE IN VARCHAR2 
, PESTADO_CAJERO  IN VARCHAR2
) AS 
BEGIN
  INSERT INTO TBCAJERO VALUES (TBCAJERO_SEQUENCE.nextval,PCEDULA,PNOMBRE,PESTADO_CAJERO);
END INSERT_TBCAJERO;

/
--------------------------------------------------------
--  DDL for Procedure INSERT_TBCLIENTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "COLABANCARIA"."INSERT_TBCLIENTE" 
(
  PTIPO_CLIENTE IN VARCHAR2 
, PCEDULA IN VARCHAR2
, PNOMBRE IN VARCHAR2
, PEDAD_CLIENTE IN VARCHAR2
) AS 
BEGIN
  INSERT INTO TBCLIENTE VALUES(TBCLIENTE_SEQUENCE.NEXTVAL,PTIPO_CLIENTE,PCEDULA,PNOMBRE,PEDAD_CLIENTE);
END INSERT_TBCLIENTE;

/
--------------------------------------------------------
--  DDL for Procedure INSERT_TBTIPOCLIENTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "COLABANCARIA"."INSERT_TBTIPOCLIENTE" 
(
  PTIPO_CLIENTE IN VARCHAR2 
, PPRIORIDAD IN VARCHAR2
) AS 
BEGIN
  INSERT INTO TBTIPOCLIENTE VALUES (TBTIPO_CLIENTE_SEQUENCE.nextval,PTIPO_CLIENTE,PPRIORIDAD);
END INSERT_TBTIPOCLIENTE;

/
--------------------------------------------------------
--  DDL for Procedure INSERT_TBTRANSACCION
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "COLABANCARIA"."INSERT_TBTRANSACCION" 
(
  PCLIENTE IN NUMBER 
, PCAJERO IN NUMBER
, PTIPO_TRANSACCION IN NUMBER
) AS 
BEGIN
  INSERT INTO TBTRANSACCION VALUES(TBTRANSACCION_SEQUENCE.NEXTVAL,PCLIENTE,PCAJERO,PTIPO_TRANSACCION,to_char(sysdate));
END INSERT_TBTRANSACCION;

/
--------------------------------------------------------
--  DDL for Procedure POSICIONCLIENTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "COLABANCARIA"."POSICIONCLIENTE" (Pcedula in nvarchar2) is
vId_Cliente number;
vTipo_Cliente nchar(2);
vPrioridad number;
Begin

if VALIDAR_CLIENTE(Pcedula) then

  select a.ID_CLIENTE,b.PRIORIDAD,b.TIPO_CLIENTE  into vId_cliente,vPrioridad,vTipo_Cliente
  from TBCLIENTE a, TBTIPOCLIENTE b
  where a.CEDULA_CLIENTE = Pcedula
  and a.ID_TIPO_CLIENTE=b.ID_TIPO_CLIENTE;
  
  INSERT INTO TBFILACLIENTE VALUES(TBFILACLIENTE_SEQUENCE.nextval,vId_Cliente,vTipo_Cliente,vPrioridad,TBFILACLIENTE_SEQUENCE_FICHA.NEXTVAL,to_char(sysdate, 'HH24:MI:SS'),'ESPERANDO');
  
else
  dbms_output.put_Line('No Existe un registro con ese numero de cedula');
end if;
end PosicionCliente;

/
--------------------------------------------------------
--  DDL for Procedure SIGUIENTE_FILA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "COLABANCARIA"."SIGUIENTE_FILA" IS
cursor cSiguiente is
SELECT rownum,PRIORIDAD,ESTADO,ID_FILA_CLIENTE, HORA_LLEGADA 
FROM (select PRIORIDAD,ESTADO,ID_FILA_CLIENTE,HORA_LLEGADA
      from TBFILACLIENTE
      where ESTADO= 'ESPERAND'
      order by PRIORIDAD,HORA_LLEGADA asc)
WHERE rownum=1;
vHorallegada varchar2(20);
vID_Fila_Cliente number;
vMensaje varchar(100);
BEGIN
  open cSiguiente;
  FOR c in cSiguiente loop
    CASE   
      WHEN c.PRIORIDAD = 1 THEN
        vID_Fila_Cliente:=c.ID_FILA_CLIENTE;
        dbms_output.put_Line('Atendiendo al cliente número '||c.rownum||' con número de id '||vID_Fila_Cliente);
        vMensaje:= (ATENDIENDO_CLIENTE(vID_Fila_Cliente));
        dbms_output.put_Line(vMensaje);
      WHEN c.PRIORIDAD = 2 THEN
        vID_Fila_Cliente:=c.ID_FILA_CLIENTE;
        dbms_output.put_Line('Atendiendo al cliente número '||c.rownum||' con número de id '||vID_Fila_Cliente);
        vMensaje:= (ATENDIENDO_CLIENTE(vID_Fila_Cliente));
        dbms_output.put_Line(vMensaje);
      WHEN c.PRIORIDAD = 3 THEN
        vID_Fila_Cliente:=c.ID_FILA_CLIENTE;
        dbms_output.put_Line('Atendiendo al cliente número '||c.rownum||' con número de id '||vID_Fila_Cliente);
        vMensaje:= (ATENDIENDO_CLIENTE(vID_Fila_Cliente));
        dbms_output.put_Line(vMensaje);
      WHEN c.PRIORIDAD = 4 THEN
        vID_Fila_Cliente:=c.ID_FILA_CLIENTE;
        dbms_output.put_Line('Atendiendo al cliente número '||c.rownum||' con número de id '||vID_Fila_Cliente);
        vMensaje:= (ATENDIENDO_CLIENTE(vID_Fila_Cliente));
        dbms_output.put_Line(vMensaje);
    END CASE;
  END LOOP;
    dbms_output.put_Line(cSiguiente%ROWCOUNT);
    if cSiguiente%ROWCOUNT =0 then
      dbms_output.put_Line('No hay clientes en la fila');
    end if;
    
  close cSiguiente;
END SIGUIENTE_FILA;

/
